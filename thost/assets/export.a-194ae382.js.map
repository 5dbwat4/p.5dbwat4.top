{"version":3,"file":"export.a-194ae382.js","sources":["../../src/views/grouping/export.a.vue"],"sourcesContent":["<template>\r\n  <n-checkbox\r\n    class=\"noprint\"\r\n    v-model:checked=\"displayADirectly\"\r\n    @update:checked=\"handledisplayADirectlyCheckedChange\"\r\n  >\r\n    直接从组卷网获取答案解析数据而非从oss缓存\r\n  </n-checkbox>\r\n  <n-button @click=\"OCRAll(8)\" class=\"noprint\">OCR all chars</n-button>\r\n  <n-button @click=\"OCRAll(3)\" class=\"noprint\">OCR all blocks</n-button>\r\n  <n-button @click=\"OCRAllSelective()\" class=\"noprint\"\r\n    >OCR all selective</n-button\r\n  >\r\n  <div :style=\"{ width: '18.76cm', 'line-height': 'normal' }\" id=\"oonom\">\r\n    <div class=\"noprint\">\r\n      <!-- <div class=\"labi-container\">\r\n                <div class=\"labi-block\" v-for=\"rr in [1,2,3,4,5,6,7]\" :key=\"rr\" \r\n        :style=\"{height:1045+'px'}\">Page # {{rr}}</div>\r\n        </div> -->\r\n    </div>\r\n    <n-image-group>\r\n      <div\r\n        id=\"corehtml\"\r\n        :style=\"{ width: '18.76cm', columns: 2, 'line-height': 'normal' }\"\r\n      >\r\n        <p\r\n          style=\"font-size: 9.5pt; font-family: Cambria, fangsong; margin: 0px\"\r\n        >\r\n          Generated by thost | Group UUID: {{ $route.params.id }} | Title:\r\n          {{ grouptitle }}\r\n        </p>\r\n        <div v-for=\"oo in chunk2array(Tlist)\" :key=\"oo.id\">\r\n          <p style=\"font-size: 9.5pt; margin: 0px; font-family: Cambria, 仿宋\">\r\n            UUID:<span style=\"font-family: 'courier new'\">{{ oo.id }}</span> |\r\n            qid:<span style=\"font-family: 'courier new'\">{{ oo.qid }}</span>\r\n          </p>\r\n          <div v-if=\"displayADirectly\" style=\"overflow: hidden\">\r\n            <img\r\n              :src=\"(XKWGetFile[oo.id] || { a: '' }).a\"\r\n              v-if=\"!OCRResAccepted[oo.id]\"\r\n            />\r\n            <n-button @click=\"OCRSingle(oo, 8)\" class=\"noprint\"\r\n              >OCR chars</n-button\r\n            >\r\n            <n-button @click=\"OCRSingle(oo, 3)\" class=\"noprint\"\r\n              >OCR block</n-button\r\n            >\r\n            <p v-if=\"orcres[oo.id]\" style=\"margin: 0 0\">{{ orcres[oo.id] }}</p>\r\n            <n-button @click=\"OCRResAccepted[oo.id] = true\" class=\"noprint\"\r\n              >Accept OCR Result</n-button\r\n            >\r\n            <div></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </n-image-group>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { onMounted, ref } from \"vue\";\r\nimport { useRoute, useRouter } from \"vue-router\";\r\nconst route = useRoute(),\r\n  router = useRouter();\r\n\r\nimport { NButton, NCheckbox, NP, NSpin, NImage, NImageGroup } from \"naive-ui\";\r\n\r\nimport { normalizeq } from \"../../shared/normalize_q/toPrint\";\r\nimport { qtypes } from \"../../shared/define_basic_qtypes\";\r\nimport { API } from \"../../shared/APIHelper\";\r\nimport swal from \"sweetalert\";\r\nconst shown = ref({\r\n  q: true,\r\n  a: false,\r\n  p: false,\r\n});\r\n\r\nconst Noptions_ret2 = ref(false);\r\nconst grouptitle = ref(\"\");\r\n\r\nconst Tlist = ref({});\r\nlet groupentry = [];\r\nAPI.post(\"/api/group/get\", { id: route.params.id }).then((sss) => {\r\n  sss.entry.split(\",\").forEach((v) => {\r\n    Tlist.value[v] = qtypes;\r\n  });\r\n\r\n  groupentry = sss.entry.split(\",\");\r\n\r\n  grouptitle.value = sss.title;\r\n\r\n  Promise.all(\r\n    sss.entry.split(\",\").map(\r\n      (v) =>\r\n        new Promise((res, rej) => {\r\n          API.get(\"/api/qapi/get/\" + v).then((i) => {\r\n            Tlist.value[v] = i;\r\n          });\r\n          GetDoneInfo(v);\r\n        })\r\n    )\r\n  ).then(() => {});\r\n  // fetch(\"/api/get\",{\"method\":\"POST\",\"body\":JSON.stringify({id:v}),\"headers\":{\"Content-Type\":\"application/json\"}}).then(o=>o.json()).then(i=>{\r\n  //     Tlist.value[v]=i\r\n  // })\r\n  // }))).then(()=>{\r\n\r\n  // })\r\n});\r\n\r\nconst _types = {};\r\n\r\n//adddddd\r\n\r\nconst _JSONparse = (v) => {\r\n  return JSON.parse(v);\r\n};\r\n\r\nconst doneinfo = ref({}),\r\n  chunk2array = (mm) => Object.entries(mm).map((o) => o[1]);\r\n\r\nconst markAsDone = async (rel) => {\r\n  console.log(rel);\r\n  await API.post(\"/api/qapi/doneinfo/mark\", {\r\n    quuid: rel.id,\r\n    timestamp: new Date().getTime(),\r\n    displayednote: \"\",\r\n    note: \"\",\r\n    rate: 50,\r\n    bankid: rel.bankid,\r\n  });\r\n};\r\n\r\nconst markAsDoneAll = async () => {\r\n  Promise.all(Object.entries(Tlist.value).map((rr) => markAsDone(rr[1]))).then(\r\n    (v) => {\r\n      swal(\"ok.\");\r\n    }\r\n  );\r\n};\r\n\r\nconst GetDoneInfo = async (id) => {\r\n  doneinfo.value[id] = await API.get(\"/api/qapi/doneinfo/getbyquuid/\" + id);\r\n};\r\n\r\nconst displayADirectly = ref(false),\r\n  XKWGetFile = ref({});\r\nconst handledisplayADirectlyCheckedChange = (checked) => {\r\n  console.log(checked);\r\n  displayADirectly.value = checked;\r\n  if (displayADirectly.value) {\r\n    Object.entries(Tlist.value).forEach((v1) => {\r\n      console.log(v1);\r\n      API.get(\r\n        \"/api/xkw-helper/get_more_detail/400/\" + v1[1].bankid + \"/\" + v1[1].qid\r\n      ).then((r) => {\r\n        _types[v1[0]] = r.data.type;\r\n        XKWGetFile.value[v1[1].id] = {\r\n          a:\r\n            API.host +\r\n            \"/api/xkw-helper/route-pic?purl=\" +\r\n            btoa(r.data.answerImg.replace(\"@2\", \"@3\").replace(\"c2\", \"c1\")),\r\n          p:\r\n            API.host +\r\n            \"/api/xkw-helper/route-pic?purl=\" +\r\n            btoa(r.data.parseImg.replace(\"@2\", \"@3\").replace(\"c2\", \"c1\")),\r\n        };\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\nconst orcres = ref({}),\r\n  OCRResAccepted = ref({});\r\nconst OCRSingle = (oo, psm) => {\r\n  API.post(\"/ocr-service\", {\r\n    url: XKWGetFile.value[oo.id].a,\r\n    psm,\r\n    lang: \"eng+chi_sim\",\r\n  }).then((v) => {\r\n    orcres.value[oo.id] = v.result;\r\n  });\r\n};\r\nconst OCRAll = (psm) => {\r\n  for (let i = 0; i < chunk2array(Tlist.value).length; i++) {\r\n    let oo = chunk2array(Tlist.value)[i];\r\n\r\n    console.log(oo);\r\n    API.post(\"/ocr-service\", {\r\n      url: XKWGetFile.value[oo.id].a,\r\n      psm,\r\n      lang: \"eng+chi_sim\",\r\n    }).then((v) => {\r\n      orcres.value[oo.id] = v.result;\r\n    });\r\n  }\r\n};\r\n\r\n\r\n\r\nconst PSM_BLOCK=3,PSM_CHARS=8\r\nconst OCRAllSelective = () => {\r\n  for (let i = 0; i < chunk2array(Tlist.value).length; i++) {\r\n    let oo = chunk2array(Tlist.value)[i];\r\n    if(\r\n        (\"\"+_types[oo.id].id).startsWith(\"28\")\r\n        ){\r\n        API.post(\"/ocr-service\", {\r\n      url: XKWGetFile.value[oo.id].a,\r\n      psm:PSM_BLOCK,\r\n      lang: \"eng+chi_sim\",\r\n    }).then((v) => {\r\n      orcres.value[oo.id] = v.result;\r\n      OCRResAccepted.value[oo.id] = true\r\n    });\r\n    }else     if(_types[oo.id].choice){\r\n        API.post(\"/ocr-service\", {\r\n      url: XKWGetFile.value[oo.id].a,\r\n      psm:PSM_CHARS,\r\n      lang: \"eng+chi_sim\",\r\n    }).then((v) => {\r\n      orcres.value[oo.id] = v.result;\r\n      OCRResAccepted.value[oo.id] = true\r\n    });\r\n    }\r\n\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@media print {\r\n  .noprint {\r\n    display: none;\r\n  }\r\n}\r\n\r\n.noprint {\r\n  user-select: none;\r\n}\r\n/* .labi-container{\r\n        display: block;\r\n        height: fit-content;\r\n        width: 100%;\r\n        position: absolute;\r\n        z-index: -1;\r\n    }\r\n    .labi-block{\r\n        display: block;\r\n        width: 100%;\r\n        border-bottom-color: black;\r\n        border-bottom-width: 2px;\r\n        position:relative;\r\n        border-bottom-style: dotted;\r\n        text-align:right;\r\n    } */\r\n\r\nimg {\r\n  width: 410px;\r\n  left: -60px;\r\n  position: relative;\r\n  filter: brightness(1.05);\r\n}\r\n\r\ntd {\r\n  padding: 0;\r\n}\r\n</style>\r\n"],"names":["PSM_BLOCK","PSM_CHARS","route","useRoute","useRouter","ref","grouptitle","Tlist","API","sss","v","qtypes","res","rej","i","GetDoneInfo","_types","doneinfo","chunk2array","mm","o","id","displayADirectly","XKWGetFile","handledisplayADirectlyCheckedChange","checked","v1","r","orcres","OCRResAccepted","OCRSingle","oo","psm","OCRAll","OCRAllSelective"],"mappings":"+0DAwMMA,GAAU,EAAEC,GAAU,iCA1IvB,MAACC,EAAQC,EAAQ,EACXC,EAAY,EAQTC,EAAI,CAChB,EAAG,GACH,EAAG,GACH,EAAG,EACL,CAAC,EAEqBA,EAAI,EAAK,EAC/B,MAAMC,EAAaD,EAAI,EAAE,EAEnBE,EAAQF,EAAI,CAAA,CAAE,EAEpBG,EAAI,KAAK,iBAAkB,CAAE,GAAIN,EAAM,OAAO,GAAI,EAAE,KAAMO,GAAQ,CAChEA,EAAI,MAAM,MAAM,GAAG,EAAE,QAASC,GAAM,CAClCH,EAAM,MAAMG,CAAC,EAAIC,CACrB,CAAG,EAEYF,EAAI,MAAM,MAAM,GAAG,EAEhCH,EAAW,MAAQG,EAAI,MAEvB,QAAQ,IACNA,EAAI,MAAM,MAAM,GAAG,EAAE,IAClBC,GACC,IAAI,QAAQ,CAACE,EAAKC,IAAQ,CACxBL,EAAI,IAAI,iBAAmBE,CAAC,EAAE,KAAMI,GAAM,CACxCP,EAAM,MAAMG,CAAC,EAAII,CAC7B,CAAW,EACDC,EAAYL,CAAC,CACvB,CAAS,CACJ,CACL,EAAI,KAAK,IAAM,CAAA,CAAE,CAOjB,CAAC,EAED,MAAMM,EAAS,CAAA,EAQTC,EAAWZ,EAAI,EAAE,EACrBa,EAAeC,GAAO,OAAO,QAAQA,CAAE,EAAE,IAAKC,GAAMA,EAAE,CAAC,CAAC,EAsBpDL,EAAc,MAAOM,GAAO,CAChCJ,EAAS,MAAMI,CAAE,EAAI,MAAMb,EAAI,IAAI,iCAAmCa,CAAE,CAC1E,EAEMC,EAAmBjB,EAAI,EAAK,EAChCkB,EAAalB,EAAI,CAAA,CAAE,EACfmB,EAAuCC,GAAY,CACvD,QAAQ,IAAIA,CAAO,EACnBH,EAAiB,MAAQG,EACrBH,EAAiB,OACnB,OAAO,QAAQf,EAAM,KAAK,EAAE,QAASmB,GAAO,CAC1C,QAAQ,IAAIA,CAAE,EACdlB,EAAI,IACF,uCAAyCkB,EAAG,CAAC,EAAE,OAAS,IAAMA,EAAG,CAAC,EAAE,GAC5E,EAAQ,KAAMC,GAAM,CACZX,EAAOU,EAAG,CAAC,CAAC,EAAIC,EAAE,KAAK,KACvBJ,EAAW,MAAMG,EAAG,CAAC,EAAE,EAAE,EAAI,CAC3B,EACElB,EAAI,KACJ,kCACA,KAAKmB,EAAE,KAAK,UAAU,QAAQ,KAAM,IAAI,EAAE,QAAQ,KAAM,IAAI,CAAC,EAC/D,EACEnB,EAAI,KACJ,kCACA,KAAKmB,EAAE,KAAK,SAAS,QAAQ,KAAM,IAAI,EAAE,QAAQ,KAAM,IAAI,CAAC,CACxE,CACA,CAAO,CACP,CAAK,CAEL,EAEMC,EAASvB,EAAI,EAAE,EACnBwB,EAAiBxB,EAAI,CAAA,CAAE,EACnByB,EAAY,CAACC,EAAIC,IAAQ,CAC7BxB,EAAI,KAAK,eAAgB,CACvB,IAAKe,EAAW,MAAMQ,EAAG,EAAE,EAAE,EAC7B,IAAAC,EACA,KAAM,aACV,CAAG,EAAE,KAAMtB,GAAM,CACbkB,EAAO,MAAMG,EAAG,EAAE,EAAIrB,EAAE,MAC5B,CAAG,CACH,EACMuB,EAAUD,GAAQ,CACtB,QAASlB,EAAI,EAAGA,EAAII,EAAYX,EAAM,KAAK,EAAE,OAAQO,IAAK,CACxD,IAAIiB,EAAKb,EAAYX,EAAM,KAAK,EAAEO,CAAC,EAEnC,QAAQ,IAAIiB,CAAE,EACdvB,EAAI,KAAK,eAAgB,CACvB,IAAKe,EAAW,MAAMQ,EAAG,EAAE,EAAE,EAC7B,IAAAC,EACA,KAAM,aACZ,CAAK,EAAE,KAAMtB,GAAM,CACbkB,EAAO,MAAMG,EAAG,EAAE,EAAIrB,EAAE,MAC9B,CAAK,CACF,CACH,EAKMwB,EAAkB,IAAM,CAC5B,QAAS,EAAI,EAAG,EAAIhB,EAAYX,EAAM,KAAK,EAAE,OAAQ,IAAK,CACxD,IAAIwB,EAAKb,EAAYX,EAAM,KAAK,EAAE,CAAC,GAE9B,GAAGS,EAAOe,EAAG,EAAE,EAAE,IAAI,WAAW,IAAI,EAErCvB,EAAI,KAAK,eAAgB,CAC3B,IAAKe,EAAW,MAAMQ,EAAG,EAAE,EAAE,EAC7B,IAAI/B,GACJ,KAAM,aACZ,CAAK,EAAE,KAAMU,GAAM,CACbkB,EAAO,MAAMG,EAAG,EAAE,EAAIrB,EAAE,OACxBmB,EAAe,MAAME,EAAG,EAAE,EAAI,EACpC,CAAK,EACYf,EAAOe,EAAG,EAAE,EAAE,QACvBvB,EAAI,KAAK,eAAgB,CAC3B,IAAKe,EAAW,MAAMQ,EAAG,EAAE,EAAE,EAC7B,IAAI9B,GACJ,KAAM,aACZ,CAAK,EAAE,KAAMS,GAAM,CACbkB,EAAO,MAAMG,EAAG,EAAE,EAAIrB,EAAE,OACxBmB,EAAe,MAAME,EAAG,EAAE,EAAI,EACpC,CAAK,CAGF,CACH"}