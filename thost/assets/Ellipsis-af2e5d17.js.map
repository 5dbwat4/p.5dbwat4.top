{"version":3,"file":"Ellipsis-af2e5d17.js","sources":["../../node_modules/naive-ui/es/ellipsis/styles/light.js","../../node_modules/naive-ui/es/ellipsis/src/styles/index.cssr.js","../../node_modules/naive-ui/es/ellipsis/src/Ellipsis.js"],"sourcesContent":["import { createTheme } from '../../_mixins';\nimport { commonLight } from '../../_styles/common';\nimport { tooltipLight } from '../../tooltip/styles';\nconst ellipsisLight = createTheme({\n    name: 'Ellipsis',\n    common: commonLight,\n    peers: {\n        Tooltip: tooltipLight\n    }\n});\nexport default ellipsisLight;\n","import { cB, cNotM, cM } from '../../../_utils/cssr';\nexport default cB('ellipsis', {\n  overflow: 'hidden'\n}, [cNotM('line-clamp', `\n white-space: nowrap;\n display: inline-block;\n vertical-align: bottom;\n max-width: 100%;\n `), cM('line-clamp', `\n display: -webkit-inline-box;\n -webkit-box-orient: vertical;\n `), cM('cursor-pointer', `\n cursor: pointer;\n `)]);","import { defineComponent, h, ref, computed, mergeProps, onDeactivated } from 'vue';\nimport { NTooltip } from '../../tooltip';\nimport { useConfig, useTheme } from '../../_mixins';\nimport { ellipsisLight } from '../styles';\nimport style from './styles/index.cssr';\nfunction createLineClampClass(clsPrefix) {\n    return `${clsPrefix}-ellipsis--line-clamp`;\n}\nfunction createCursorClass(clsPrefix, cursor) {\n    return `${clsPrefix}-ellipsis--cursor-${cursor}`;\n}\nexport const ellipsisProps = Object.assign(Object.assign({}, useTheme.props), { expandTrigger: String, lineClamp: [Number, String], tooltip: {\n        type: [Boolean, Object],\n        default: true\n    } });\nexport default defineComponent({\n    name: 'Ellipsis',\n    inheritAttrs: false,\n    props: ellipsisProps,\n    setup(props, { slots, attrs }) {\n        const { mergedClsPrefixRef } = useConfig(props);\n        const mergedTheme = useTheme('Ellipsis', '-ellipsis', style, ellipsisLight, props, mergedClsPrefixRef);\n        const triggerRef = ref(null);\n        const triggerInnerRef = ref(null);\n        const tooltipRef = ref(null);\n        const expandedRef = ref(false);\n        const ellipsisStyleRef = computed(() => {\n            const { lineClamp } = props;\n            const { value: expanded } = expandedRef;\n            if (lineClamp !== undefined) {\n                return {\n                    textOverflow: '',\n                    '-webkit-line-clamp': expanded ? '' : lineClamp\n                };\n            }\n            else {\n                return {\n                    textOverflow: expanded ? '' : 'ellipsis',\n                    '-webkit-line-clamp': ''\n                };\n            }\n        });\n        function getTooltipDisabled() {\n            let tooltipDisabled = false;\n            const { value: expanded } = expandedRef;\n            if (expanded)\n                return true;\n            const { value: trigger } = triggerRef;\n            if (trigger) {\n                const { lineClamp } = props;\n                // we need to apply style here, since the dom may be updated in\n                // nextTick, measure dom size will derive wrong result\n                syncEllipsisStyle(trigger);\n                if (lineClamp !== undefined) {\n                    tooltipDisabled = trigger.scrollHeight <= trigger.offsetHeight;\n                }\n                else {\n                    const { value: triggerInner } = triggerInnerRef;\n                    if (triggerInner) {\n                        tooltipDisabled =\n                            triggerInner.getBoundingClientRect().width <=\n                                trigger.getBoundingClientRect().width;\n                    }\n                }\n                syncCursorStyle(trigger, tooltipDisabled);\n            }\n            return tooltipDisabled;\n        }\n        const handleClickRef = computed(() => {\n            return props.expandTrigger === 'click'\n                ? () => {\n                    var _a;\n                    const { value: expanded } = expandedRef;\n                    if (expanded) {\n                        (_a = tooltipRef.value) === null || _a === void 0 ? void 0 : _a.setShow(false);\n                    }\n                    expandedRef.value = !expanded;\n                }\n                : undefined;\n        });\n        onDeactivated(() => {\n            var _a;\n            if (props.tooltip) {\n                (_a = tooltipRef.value) === null || _a === void 0 ? void 0 : _a.setShow(false);\n            }\n        });\n        const renderTrigger = () => (h(\"span\", Object.assign({}, mergeProps(attrs, {\n            class: [\n                `${mergedClsPrefixRef.value}-ellipsis`,\n                props.lineClamp !== undefined\n                    ? createLineClampClass(mergedClsPrefixRef.value)\n                    : undefined,\n                props.expandTrigger === 'click'\n                    ? createCursorClass(mergedClsPrefixRef.value, 'pointer')\n                    : undefined\n            ],\n            style: ellipsisStyleRef.value\n        }), { ref: \"triggerRef\", onClick: handleClickRef.value, onMouseenter: \n            // get tooltip disabled will derive cursor style\n            props.expandTrigger === 'click' ? getTooltipDisabled : undefined }), props.lineClamp ? slots : h(\"span\", { ref: \"triggerInnerRef\" }, slots)));\n        function syncEllipsisStyle(trigger) {\n            if (!trigger)\n                return;\n            const latestStyle = ellipsisStyleRef.value;\n            const lineClampClass = createLineClampClass(mergedClsPrefixRef.value);\n            if (props.lineClamp !== undefined) {\n                syncTriggerClass(trigger, lineClampClass, 'add');\n            }\n            else {\n                syncTriggerClass(trigger, lineClampClass, 'remove');\n            }\n            for (const key in latestStyle) {\n                // guard can make it a little faster\n                if (trigger.style[key] !== latestStyle[key]) {\n                    ;\n                    trigger.style[key] = latestStyle[key];\n                }\n            }\n        }\n        function syncCursorStyle(trigger, tooltipDisabled) {\n            const cursorClass = createCursorClass(mergedClsPrefixRef.value, 'pointer');\n            if (props.expandTrigger === 'click' && !tooltipDisabled) {\n                syncTriggerClass(trigger, cursorClass, 'add');\n            }\n            else {\n                syncTriggerClass(trigger, cursorClass, 'remove');\n            }\n        }\n        function syncTriggerClass(trigger, styleClass, action) {\n            if (action === 'add') {\n                if (!trigger.classList.contains(styleClass)) {\n                    trigger.classList.add(styleClass);\n                }\n            }\n            else {\n                if (trigger.classList.contains(styleClass)) {\n                    trigger.classList.remove(styleClass);\n                }\n            }\n        }\n        return {\n            mergedTheme,\n            triggerRef,\n            triggerInnerRef,\n            tooltipRef,\n            handleClick: handleClickRef,\n            renderTrigger,\n            getTooltipDisabled\n        };\n    },\n    render() {\n        var _a;\n        const { tooltip, renderTrigger, $slots } = this;\n        if (tooltip) {\n            const { mergedTheme } = this;\n            return (h(NTooltip, Object.assign({ ref: \"tooltipRef\", placement: \"top\" }, tooltip, { getDisabled: this.getTooltipDisabled, theme: mergedTheme.peers.Tooltip, themeOverrides: mergedTheme.peerOverrides.Tooltip }), {\n                trigger: renderTrigger,\n                default: (_a = $slots.tooltip) !== null && _a !== void 0 ? _a : $slots.default\n            }));\n        }\n        else\n            return renderTrigger();\n    }\n});\n"],"names":["ellipsisLight","createTheme","commonLight","tooltipLight","ellipsisLight$1","style","cB","cNotM","cM","createLineClampClass","clsPrefix","createCursorClass","cursor","ellipsisProps","useTheme","NEllipsis","defineComponent","props","slots","attrs","mergedClsPrefixRef","useConfig","mergedTheme","triggerRef","ref","triggerInnerRef","tooltipRef","expandedRef","ellipsisStyleRef","computed","lineClamp","expanded","getTooltipDisabled","tooltipDisabled","trigger","syncEllipsisStyle","triggerInner","syncCursorStyle","handleClickRef","_a","onDeactivated","renderTrigger","h","mergeProps","latestStyle","lineClampClass","syncTriggerClass","key","cursorClass","styleClass","action","tooltip","$slots","NTooltip"],"mappings":"mOAGA,MAAMA,EAAgBC,EAAY,CAC9B,KAAM,WACN,OAAQC,EACR,MAAO,CACH,QAASC,CACZ,CACL,CAAC,EACDC,EAAeJ,ECTAK,EAAAC,EAAG,WAAY,CAC5B,SAAU,QACZ,EAAG,CAACC,EAAM,aAAc;AAAA;AAAA;AAAA;AAAA;AAAA,EAKtB,EAAGC,EAAG,aAAc;AAAA;AAAA;AAAA,EAGpB,EAAGA,EAAG,iBAAkB;AAAA;AAAA,EAExB,CAAC,CAAC,ECRJ,SAASC,EAAqBC,EAAW,CACrC,MAAO,GAAGA,CAAS,uBACvB,CACA,SAASC,EAAkBD,EAAWE,EAAQ,CAC1C,MAAO,GAAGF,CAAS,qBAAqBE,CAAM,EAClD,CACO,MAAMC,EAAgB,OAAO,OAAO,OAAO,OAAO,CAAE,EAAEC,EAAS,KAAK,EAAG,CAAE,cAAe,OAAQ,UAAW,CAAC,OAAQ,MAAM,EAAG,QAAS,CACrI,KAAM,CAAC,QAAS,MAAM,EACtB,QAAS,EACZ,CAAA,CAAE,EACPC,EAAeC,EAAgB,CAC3B,KAAM,WACN,aAAc,GACd,MAAOH,EACP,MAAMI,EAAO,CAAE,MAAAC,EAAO,MAAAC,CAAK,EAAI,CAC3B,KAAM,CAAE,mBAAAC,CAAkB,EAAKC,EAAUJ,CAAK,EACxCK,EAAcR,EAAS,WAAY,YAAaT,EAAOL,EAAeiB,EAAOG,CAAkB,EAC/FG,EAAaC,EAAI,IAAI,EACrBC,EAAkBD,EAAI,IAAI,EAC1BE,EAAaF,EAAI,IAAI,EACrBG,EAAcH,EAAI,EAAK,EACvBI,EAAmBC,EAAS,IAAM,CACpC,KAAM,CAAE,UAAAC,CAAW,EAAGb,EAChB,CAAE,MAAOc,CAAU,EAAGJ,EAC5B,OAAIG,IAAc,OACP,CACH,aAAc,GACd,qBAAsBC,EAAW,GAAKD,CAC1D,EAGuB,CACH,aAAcC,EAAW,GAAK,WAC9B,qBAAsB,EAC1C,CAEA,CAAS,EACD,SAASC,GAAqB,CAC1B,IAAIC,EAAkB,GACtB,KAAM,CAAE,MAAOF,CAAU,EAAGJ,EAC5B,GAAII,EACA,MAAO,GACX,KAAM,CAAE,MAAOG,CAAS,EAAGX,EAC3B,GAAIW,EAAS,CACT,KAAM,CAAE,UAAAJ,CAAW,EAAGb,EAItB,GADAkB,EAAkBD,CAAO,EACrBJ,IAAc,OACdG,EAAkBC,EAAQ,cAAgBA,EAAQ,iBAEjD,CACD,KAAM,CAAE,MAAOE,CAAc,EAAGX,EAC5BW,IACAH,EACIG,EAAa,sBAAqB,EAAG,OACjCF,EAAQ,sBAAuB,EAAC,MAE/C,CACDG,EAAgBH,EAASD,CAAe,CAC3C,CACD,OAAOA,CACV,CACD,MAAMK,EAAiBT,EAAS,IACrBZ,EAAM,gBAAkB,QACzB,IAAM,CACJ,IAAIsB,EACJ,KAAM,CAAE,MAAOR,CAAU,EAAGJ,EACxBI,KACCQ,EAAKb,EAAW,SAAW,MAAQa,IAAO,QAAkBA,EAAG,QAAQ,EAAK,GAEjFZ,EAAY,MAAQ,CAACI,CACxB,EACC,MACT,EACDS,EAAc,IAAM,CAChB,IAAID,EACAtB,EAAM,WACLsB,EAAKb,EAAW,SAAW,MAAQa,IAAO,QAAkBA,EAAG,QAAQ,EAAK,EAE7F,CAAS,EACD,MAAME,EAAgB,IAAOC,EAAE,OAAQ,OAAO,OAAO,CAAA,EAAIC,EAAWxB,EAAO,CACvE,MAAO,CACH,GAAGC,EAAmB,KAAK,YAC3BH,EAAM,YAAc,OACdR,EAAqBW,EAAmB,KAAK,EAC7C,OACNH,EAAM,gBAAkB,QAClBN,EAAkBS,EAAmB,MAAO,SAAS,EACrD,MACT,EACD,MAAOQ,EAAiB,KACpC,CAAS,EAAG,CAAE,IAAK,aAAc,QAASU,EAAe,MAAO,aAEpDrB,EAAM,gBAAkB,QAAUe,EAAqB,MAAW,CAAA,EAAGf,EAAM,UAAYC,EAAQwB,EAAE,OAAQ,CAAE,IAAK,iBAAiB,EAAIxB,CAAK,CAAC,EAC/I,SAASiB,EAAkBD,EAAS,CAChC,GAAI,CAACA,EACD,OACJ,MAAMU,EAAchB,EAAiB,MAC/BiB,EAAiBpC,EAAqBW,EAAmB,KAAK,EAChEH,EAAM,YAAc,OACpB6B,EAAiBZ,EAASW,EAAgB,KAAK,EAG/CC,EAAiBZ,EAASW,EAAgB,QAAQ,EAEtD,UAAWE,KAAOH,EAEVV,EAAQ,MAAMa,CAAG,IAAMH,EAAYG,CAAG,IAEtCb,EAAQ,MAAMa,CAAG,EAAIH,EAAYG,CAAG,EAG/C,CACD,SAASV,EAAgBH,EAASD,EAAiB,CAC/C,MAAMe,EAAcrC,EAAkBS,EAAmB,MAAO,SAAS,EACrEH,EAAM,gBAAkB,SAAW,CAACgB,EACpCa,EAAiBZ,EAASc,EAAa,KAAK,EAG5CF,EAAiBZ,EAASc,EAAa,QAAQ,CAEtD,CACD,SAASF,EAAiBZ,EAASe,EAAYC,EAAQ,CAC/CA,IAAW,MACNhB,EAAQ,UAAU,SAASe,CAAU,GACtCf,EAAQ,UAAU,IAAIe,CAAU,EAIhCf,EAAQ,UAAU,SAASe,CAAU,GACrCf,EAAQ,UAAU,OAAOe,CAAU,CAG9C,CACD,MAAO,CACH,YAAA3B,EACA,WAAAC,EACA,gBAAAE,EACA,WAAAC,EACA,YAAaY,EACb,cAAAG,EACA,mBAAAT,CACZ,CACK,EACD,QAAS,CACL,IAAIO,EACJ,KAAM,CAAE,QAAAY,EAAS,cAAAV,EAAe,OAAAW,CAAM,EAAK,KAC3C,GAAID,EAAS,CACT,KAAM,CAAE,YAAA7B,CAAa,EAAG,KACxB,OAAQoB,EAAEW,EAAU,OAAO,OAAO,CAAE,IAAK,aAAc,UAAW,KAAO,EAAEF,EAAS,CAAE,YAAa,KAAK,mBAAoB,MAAO7B,EAAY,MAAM,QAAS,eAAgBA,EAAY,cAAc,OAAS,CAAA,EAAG,CAChN,QAASmB,EACT,SAAUF,EAAKa,EAAO,WAAa,MAAQb,IAAO,OAASA,EAAKa,EAAO,OACvF,CAAa,CACJ,KAEG,QAAOX,EAAa,CAC3B,CACL,CAAC","x_google_ignoreList":[0,1,2]}