{"version":3,"file":"index-f468388f.js","sources":["../../src/views/batch/batch2groupForm.vue","../../src/views/batch/index.vue"],"sourcesContent":["<template>\r\n    <n-modal v-model:show=\"showM\">\r\n        <n-card>\r\n        <n-input placeholder=\"Title\" v-model:value=\"title\"/>\r\n        <n-input placeholder=\"Desc\" type=\"textarea\"  v-model:value=\"desc\"/>\r\n        <n-button @click=\"saveasGroup()\">save</n-button>\r\n        </n-card>\r\n    </n-modal>\r\n    <n-button @click=\"showM=true\">save</n-button>\r\n    <n-button v-if=\"groupsaved\" @click=\"GotoGroup()\">View</n-button>\r\n</template>\r\n\r\n<script setup>\r\n    import {\r\n        NButton,\r\n        NInput,NModal,NCard\r\n    } from \"naive-ui\";\r\n    import {\r\n      ref,\r\n        useAttrs\r\n    } from \"vue\";\r\nimport {useRoute,useRouter} from \"vue-router\"\r\nimport { API } from \"../../shared/APIHelper\";\r\nconst route=useRoute(),router=useRouter()\r\n\r\n    const attrs = useAttrs()\r\n\r\n    const saveasGroup = async () => {\r\n        API.post(\"/api/group/new\",{\r\n                entry: attrs.ql,\r\n                timestamp: (new Date()).getTime(),\r\n                title:title.value,\r\n                desc:desc.value\r\n            }).then(i => {\r\n        // fetch(\"/api/group/new\", {\r\n        //     \"method\": \"POST\",\r\n        //     \"body\": JSON.stringify({\r\n        //         entry: attrs.ql,\r\n        //         timestamp: (new Date()).getTime(),\r\n        //         title:title.value,\r\n        //         desc:desc.value\r\n        //     }),\r\n        //     \"headers\": {\r\n        //         \"Content-Type\": \"application/json\"\r\n        //     }\r\n        // }).then(o => o.json()).then(i => {\r\n            groupsaved.value = true\r\n            groupid.value = i.id\r\n        })\r\n    }, groupsaved = ref(false), groupid = ref(\"\"), GotoGroup = async () => {\r\n        router.push(\"/group/\" + groupid.value)\r\n    }, showM = ref(false)\r\n    ,title=ref(\"\"),desc=ref(\"\")\r\n</script>\r\n\r\n<style>\r\n\r\n</style>","<template>\r\n<n-button @click=\"shown.q=!shown.q\">Q</n-button>\r\n<n-button @click=\"shown.a=!shown.a\">A</n-button>\r\n<n-button @click=\"shown.p=!shown.p\">P</n-button>\r\n<btog-form :ql=\"$route.params.ids\"/>\r\n<div style=\"width:18.76cm\">\r\n<div v-for=\"oo in chunk2array(Tlist)\" :key=\"oo.id\" >\r\n    <p style=\"font-size:9.5pt\">UUID:<span style=\"font-family:'courier new'\">{{oo.id}}</span> | qid:<span style=\"font-family:'courier new'\">{{oo.qid}}</span> <span v-if=\"shown.q\">| Info: {{_JSONparse(oo.extra).info}} | Origin: {{_JSONparse(oo.extra).from}}</span></p>\r\n<div v-if=\"shown.q\" v-html=\"normalizeq(oo.q)\" style=\"font-size:10.5pt;font-family:Cambria , 宋体\" ></div>\r\n<div v-if=\"shown.a\"><img :src='\"/oss-storage/\"+oo.a.replace(\"<answerparser>\",\"\").replace(\"</answerparser>\",\"\").split(\"|\")[0]+\".png\"'/></div>\r\n<div v-if=\"shown.p\"><img :src='\"/oss-storage/\"+oo.a.replace(\"<answerparser>\",\"\").replace(\"</answerparser>\",\"\").split(\"|\")[1]+\".png\"'/></div>\r\n</div></div>\r\n</template>\r\n\r\n<script setup>\r\n\r\n\r\nimport { onMounted, ref } from \"vue\"\r\nimport {useRoute,useRouter} from \"vue-router\"\r\nconst route=useRoute(),router=useRouter()\r\nimport btogForm from \"./batch2groupForm.vue\"\r\nimport {API} from \"../../shared/APIHelper\"\r\n\r\nimport {NButton} from \"naive-ui\"\r\n\r\nimport {normalizeq} from \"../../shared/normalize_q/toScreenDisplay\"\r\n\r\nconst shown=ref({\r\n    q:true,\r\n    a:false,\r\n    p:false\r\n})\r\n\r\nimport {qtypes} from \"../../shared/define_basic_qtypes\"\r\n\r\nconst Tlist=ref({})\r\n\r\nroute.params.ids.split(\",\").forEach(v => {\r\n    Tlist.value[v]=qtypes\r\n});\r\n\r\nPromise.all(route.params.ids.split(\",\").map(v=>new Promise((res,rej)=>{\r\nAPI.post(\"/api/get\",{id:v}).then(i=>{\r\n    Tlist.value[v]=i\r\n})\r\n}))).then(()=>{\r\n// fetch(\"/api/get\",{\"method\":\"POST\",\"body\":JSON.stringify({id:v}),\"headers\":{\"Content-Type\":\"application/json\"}}).then(o=>o.json()).then(i=>{\r\n//     Tlist.value[v]=i\r\n// })\r\n// }))).then(()=>{\r\n\r\n})\r\n\r\n\r\n\r\n\r\nconst _JSONparse=(v)=>{return JSON.parse(v)}\r\n\r\n\r\n\r\n\r\n,chunk2array=mm=>Object.entries(mm).map(o=>o[1])\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n"],"names":["useRoute","router","useRouter","attrs","useAttrs","saveasGroup","API","title","desc","i","groupsaved","groupid","ref","GotoGroup","showM","route","shown","Tlist","v","qtypes","res","rej","_JSONparse","chunk2array","mm","o"],"mappings":"8xCAaAA,EAAA,EAAA,MAAAC,EAAAC,EAAA,EAYAC,EAAAC,EAAA,EAEAC,EAAA,SAAA,CACAC,EAAA,KAAA,iBAAA,CACA,MAAAH,EAAA,GACA,UAAA,IAAA,KAAA,EAAA,QAAA,EACA,MAAAI,EAAA,MACA,KAAAC,EAAA,KACA,CAAA,EAAA,KAAAC,GAAA,CAaAC,EAAA,MAAA,GACAC,EAAA,MAAAF,EAAA,EACA,CAAA,CACA,EAAAC,EAAAE,EAAA,EAAA,EAAAD,EAAAC,EAAA,EAAA,EAAAC,EAAA,SAAA,CACAZ,EAAA,KAAA,UAAAU,EAAA,KAAA,CACA,EAAAG,EAAAF,EAAA,EAAA,EACAL,EAAAK,EAAA,EAAA,EAAAJ,EAAAI,EAAA,EAAA,m3BCjCA,MAAAG,EAAAf,EAAA,EAAAE,EAAA,EAQA,MAAAc,EAAAJ,EAAA,CACA,EAAA,GACA,EAAA,GACA,EAAA,EACA,CAAA,EAIAK,EAAAL,EAAA,EAAA,EAEAG,EAAA,OAAA,IAAA,MAAA,GAAA,EAAA,QAAAG,GAAA,CACAD,EAAA,MAAAC,CAAA,EAAAC,CACA,CAAA,EAEA,QAAA,IAAAJ,EAAA,OAAA,IAAA,MAAA,GAAA,EAAA,IAAAG,GAAA,IAAA,QAAA,CAAAE,EAAAC,IAAA,CACAf,EAAA,KAAA,WAAA,CAAA,GAAAY,CAAA,CAAA,EAAA,KAAAT,GAAA,CACAQ,EAAA,MAAAC,CAAA,EAAAT,CACA,CAAA,CACA,CAAA,CAAA,CAAA,EAAA,KAAA,IAAA,CAMA,CAAA,EAKA,MAAAa,EAAAJ,GAAA,KAAA,MAAAA,CAAA,EAKAK,EAAAC,GAAA,OAAA,QAAAA,CAAA,EAAA,IAAAC,GAAAA,EAAA,CAAA,CAAA"}