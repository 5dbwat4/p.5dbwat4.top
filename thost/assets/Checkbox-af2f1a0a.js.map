{"version":3,"file":"Checkbox-af2f1a0a.js","sources":["../../node_modules/naive-ui/es/checkbox/styles/_common.js","../../node_modules/naive-ui/es/checkbox/styles/light.js","../../node_modules/naive-ui/es/checkbox/src/CheckMark.js","../../node_modules/naive-ui/es/checkbox/src/LineMark.js","../../node_modules/naive-ui/es/checkbox/src/CheckboxGroup.js","../../node_modules/naive-ui/es/checkbox/src/styles/index.cssr.js","../../node_modules/naive-ui/es/checkbox/src/Checkbox.js"],"sourcesContent":["export default {\n    sizeSmall: '14px',\n    sizeMedium: '16px',\n    sizeLarge: '18px',\n    labelPadding: '0 8px',\n    labelFontWeight: '400'\n};\n","import { changeColor } from 'seemly';\nimport { commonLight } from '../../_styles/common';\nimport commonVariables from './_common';\nexport const self = (vars) => {\n    const { baseColor, inputColorDisabled, cardColor, modalColor, popoverColor, textColorDisabled, borderColor, primaryColor, textColor2, fontSizeSmall, fontSizeMedium, fontSizeLarge, borderRadiusSmall, lineHeight } = vars;\n    return Object.assign(Object.assign({}, commonVariables), { labelLineHeight: lineHeight, fontSizeSmall,\n        fontSizeMedium,\n        fontSizeLarge, borderRadius: borderRadiusSmall, color: baseColor, colorChecked: primaryColor, colorDisabled: inputColorDisabled, colorDisabledChecked: inputColorDisabled, colorTableHeader: cardColor, colorTableHeaderModal: modalColor, colorTableHeaderPopover: popoverColor, checkMarkColor: baseColor, checkMarkColorDisabled: textColorDisabled, checkMarkColorDisabledChecked: textColorDisabled, border: `1px solid ${borderColor}`, borderDisabled: `1px solid ${borderColor}`, borderDisabledChecked: `1px solid ${borderColor}`, borderChecked: `1px solid ${primaryColor}`, borderFocus: `1px solid ${primaryColor}`, boxShadowFocus: `0 0 0 2px ${changeColor(primaryColor, { alpha: 0.3 })}`, textColor: textColor2, textColorDisabled });\n};\nconst checkboxLight = {\n    name: 'Checkbox',\n    common: commonLight,\n    self\n};\nexport default checkboxLight;\n","import { h } from 'vue';\nexport default (h(\"svg\", { viewBox: \"0 0 64 64\", class: \"check-icon\" },\n    h(\"path\", { d: \"M50.42,16.76L22.34,39.45l-8.1-11.46c-1.12-1.58-3.3-1.96-4.88-0.84c-1.58,1.12-1.95,3.3-0.84,4.88l10.26,14.51  c0.56,0.79,1.42,1.31,2.38,1.45c0.16,0.02,0.32,0.03,0.48,0.03c0.8,0,1.57-0.27,2.2-0.78l30.99-25.03c1.5-1.21,1.74-3.42,0.52-4.92  C54.13,15.78,51.93,15.55,50.42,16.76z\" })));\n","import { h } from 'vue';\nexport default (h(\"svg\", { viewBox: \"0 0 100 100\", class: \"line-icon\" },\n    h(\"path\", { d: \"M80.2,55.5H21.4c-2.8,0-5.1-2.5-5.1-5.5l0,0c0-3,2.3-5.5,5.1-5.5h58.7c2.8,0,5.1,2.5,5.1,5.5l0,0C85.2,53.1,82.9,55.5,80.2,55.5z\" })));\n","import { h, defineComponent, provide, computed, toRef, ref, watchEffect } from 'vue';\nimport { useMergedState } from 'vooks';\nimport { useConfig, useFormItem } from '../../_mixins';\nimport { call, createInjectionKey, warnOnce } from '../../_utils';\nexport const checkboxGroupInjectionKey = createInjectionKey('n-checkbox-group');\nexport const checkboxGroupProps = {\n    min: Number,\n    max: Number,\n    size: String,\n    value: Array,\n    defaultValue: {\n        type: Array,\n        default: null\n    },\n    disabled: {\n        type: Boolean,\n        default: undefined\n    },\n    'onUpdate:value': [Function, Array],\n    onUpdateValue: [Function, Array],\n    // deprecated\n    onChange: [Function, Array]\n};\nexport default defineComponent({\n    name: 'CheckboxGroup',\n    props: checkboxGroupProps,\n    setup(props) {\n        if (process.env.NODE_ENV !== 'production') {\n            watchEffect(() => {\n                if (props.onChange !== undefined) {\n                    warnOnce('checkbox-group', '`on-change` is deprecated, please use `on-update:value` instead.');\n                }\n            });\n        }\n        const { mergedClsPrefixRef } = useConfig(props);\n        const formItem = useFormItem(props);\n        const { mergedSizeRef, mergedDisabledRef } = formItem;\n        const uncontrolledValueRef = ref(props.defaultValue);\n        const controlledValueRef = computed(() => props.value);\n        const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n        const checkedCount = computed(() => {\n            var _a;\n            return ((_a = mergedValueRef.value) === null || _a === void 0 ? void 0 : _a.length) || 0;\n        });\n        const valueSetRef = computed(() => {\n            if (Array.isArray(mergedValueRef.value)) {\n                return new Set(mergedValueRef.value);\n            }\n            return new Set();\n        });\n        function toggleCheckbox(checked, checkboxValue) {\n            const { nTriggerFormInput, nTriggerFormChange } = formItem;\n            const { onChange, 'onUpdate:value': _onUpdateValue, onUpdateValue } = props;\n            if (Array.isArray(mergedValueRef.value)) {\n                const groupValue = Array.from(mergedValueRef.value);\n                const index = groupValue.findIndex((value) => value === checkboxValue);\n                if (checked) {\n                    if (!~index) {\n                        groupValue.push(checkboxValue);\n                        if (onUpdateValue) {\n                            call(onUpdateValue, groupValue, {\n                                actionType: 'check',\n                                value: checkboxValue\n                            });\n                        }\n                        if (_onUpdateValue) {\n                            call(_onUpdateValue, groupValue, {\n                                actionType: 'check',\n                                value: checkboxValue\n                            });\n                        }\n                        nTriggerFormInput();\n                        nTriggerFormChange();\n                        uncontrolledValueRef.value = groupValue;\n                        // deprecated\n                        if (onChange)\n                            call(onChange, groupValue);\n                    }\n                }\n                else {\n                    if (~index) {\n                        groupValue.splice(index, 1);\n                        if (onUpdateValue) {\n                            call(onUpdateValue, groupValue, {\n                                actionType: 'uncheck',\n                                value: checkboxValue\n                            });\n                        }\n                        if (_onUpdateValue) {\n                            call(_onUpdateValue, groupValue, {\n                                actionType: 'uncheck',\n                                value: checkboxValue\n                            });\n                        }\n                        if (onChange)\n                            call(onChange, groupValue); // deprecated\n                        uncontrolledValueRef.value = groupValue;\n                        nTriggerFormInput();\n                        nTriggerFormChange();\n                    }\n                }\n            }\n            else {\n                if (checked) {\n                    if (onUpdateValue) {\n                        call(onUpdateValue, [checkboxValue], {\n                            actionType: 'check',\n                            value: checkboxValue\n                        });\n                    }\n                    if (_onUpdateValue) {\n                        call(_onUpdateValue, [checkboxValue], {\n                            actionType: 'check',\n                            value: checkboxValue\n                        });\n                    }\n                    if (onChange)\n                        call(onChange, [checkboxValue]); // deprecated\n                    uncontrolledValueRef.value = [checkboxValue];\n                    nTriggerFormInput();\n                    nTriggerFormChange();\n                }\n                else {\n                    if (onUpdateValue) {\n                        call(onUpdateValue, [], {\n                            actionType: 'uncheck',\n                            value: checkboxValue\n                        });\n                    }\n                    if (_onUpdateValue) {\n                        call(_onUpdateValue, [], {\n                            actionType: 'uncheck',\n                            value: checkboxValue\n                        });\n                    }\n                    if (onChange)\n                        call(onChange, []); // deprecated\n                    uncontrolledValueRef.value = [];\n                    nTriggerFormInput();\n                    nTriggerFormChange();\n                }\n            }\n        }\n        provide(checkboxGroupInjectionKey, {\n            checkedCountRef: checkedCount,\n            maxRef: toRef(props, 'max'),\n            minRef: toRef(props, 'min'),\n            valueSetRef,\n            disabledRef: mergedDisabledRef,\n            mergedSizeRef,\n            toggleCheckbox\n        });\n        return {\n            mergedClsPrefix: mergedClsPrefixRef\n        };\n    },\n    render() {\n        return (h(\"div\", { class: `${this.mergedClsPrefix}-checkbox-group`, role: \"group\" }, this.$slots));\n    }\n});\n","import { c, cB, cE, cM, insideModal, insidePopover } from '../../../_utils/cssr';\nimport { iconSwitchTransition } from '../../../_styles/transitions/icon-switch.cssr';\n// vars:\n// --n-label-line-height\n// --n-bezier\n// --n-size\n// --n-border\n// --n-border-focus\n// --n-border-checked\n// --n-border-disabled\n// --n-border-disabled-checked\n// --n-box-shadow-focus\n// --n-color\n// --n-color-checked\n// --n-color-table\n// --n-color-table-modal\n// --n-color-disabled\n// --n-color-disabled-checked\n// --n-text-color\n// --n-text-color-disabled\n// --n-check-mark-color\n// --n-check-mark-color-disabled\n// --n-check-mark-color-disabled-checked\n// --n-border-radius\n// --n-font-size\n// --n-label-padding\nexport default c([cB('checkbox', `\n line-height: var(--n-label-line-height);\n font-size: var(--n-font-size);\n outline: none;\n cursor: pointer;\n display: inline-flex;\n flex-wrap: nowrap;\n align-items: flex-start;\n word-break: break-word;\n --n-merged-color-table: var(--n-color-table);\n `, [c('&:hover', [cB('checkbox-box', [cE('border', {\n  border: 'var(--n-border-checked)'\n})])]), c('&:focus:not(:active)', [cB('checkbox-box', [cE('border', `\n border: var(--n-border-focus);\n box-shadow: var(--n-box-shadow-focus);\n `)])]), cM('inside-table', [cB('checkbox-box', `\n background-color: var(--n-merged-color-table);\n `)]), cM('checked', [cB('checkbox-box', `\n background-color: var(--n-color-checked);\n `, [cB('checkbox-icon', [\n// if not set width to 100%, safari & old chrome won't display the icon\nc('.check-icon', `\n opacity: 1;\n transform: scale(1);\n `)])])]), cM('indeterminate', [cB('checkbox-box', [cB('checkbox-icon', [c('.check-icon', `\n opacity: 0;\n transform: scale(.5);\n `), c('.line-icon', `\n opacity: 1;\n transform: scale(1);\n `)])])]), cM('checked, indeterminate', [c('&:focus:not(:active)', [cB('checkbox-box', [cE('border', `\n border: var(--n-border-checked);\n box-shadow: var(--n-box-shadow-focus);\n `)])]), cB('checkbox-box', `\n background-color: var(--n-color-checked);\n border-left: 0;\n border-top: 0;\n `, [cE('border', {\n  border: 'var(--n-border-checked)'\n})])]), cM('disabled', {\n  cursor: 'not-allowed'\n}, [cM('checked', [cB('checkbox-box', `\n background-color: var(--n-color-disabled-checked);\n `, [cE('border', {\n  border: 'var(--n-border-disabled-checked)'\n}), cB('checkbox-icon', [c('.check-icon, .line-icon', {\n  fill: 'var(--n-check-mark-color-disabled-checked)'\n})])])]), cB('checkbox-box', `\n background-color: var(--n-color-disabled);\n `, [cE('border', {\n  border: 'var(--n-border-disabled)'\n}), cB('checkbox-icon', [c('.check-icon, .line-icon', {\n  fill: 'var(--n-check-mark-color-disabled)'\n})])]), cE('label', {\n  color: 'var(--n-text-color-disabled)'\n})]), cB('checkbox-box-wrapper', `\n position: relative;\n width: var(--n-size);\n flex-shrink: 0;\n flex-grow: 0;\n user-select: none;\n -webkit-user-select: none;\n `), cB('checkbox-box', `\n position: absolute;\n left: 0;\n top: 50%;\n transform: translateY(-50%);\n height: var(--n-size);\n width: var(--n-size);\n display: inline-block;\n box-sizing: border-box;\n border-radius: var(--n-border-radius);\n background-color: var(--n-color);\n transition: background-color 0.3s var(--n-bezier);\n `, [cE('border', `\n transition:\n border-color .3s var(--n-bezier),\n box-shadow .3s var(--n-bezier);\n border-radius: inherit;\n position: absolute;\n left: 0;\n right: 0;\n top: 0;\n bottom: 0;\n border: var(--n-border);\n `), cB('checkbox-icon', `\n display: flex;\n align-items: center;\n justify-content: center;\n position: absolute;\n left: 1px;\n right: 1px;\n top: 1px;\n bottom: 1px;\n `, [c('.check-icon, .line-icon', `\n width: 100%;\n fill: var(--n-check-mark-color);\n opacity: 0;\n transform: scale(0.5);\n transform-origin: center;\n transition:\n fill 0.3s var(--n-bezier),\n transform 0.3s var(--n-bezier),\n opacity 0.3s var(--n-bezier),\n border-color 0.3s var(--n-bezier);\n `), iconSwitchTransition({\n  left: '1px',\n  top: '1px'\n})])]), cE('label', `\n color: var(--n-text-color);\n transition: color .3s var(--n-bezier);\n user-select: none;\n -webkit-user-select: none;\n padding: var(--n-label-padding);\n font-weight: var(--n-label-font-weight);\n `, [c('&:empty', {\n  display: 'none'\n})])]),\n// modal table header checkbox\ninsideModal(cB('checkbox', `\n --n-merged-color-table: var(--n-color-table-modal);\n `)),\n// popover table header checkbox\ninsidePopover(cB('checkbox', `\n --n-merged-color-table: var(--n-color-table-popover);\n `))]);","import { h, defineComponent, computed, inject, ref, toRef, watchEffect } from 'vue';\nimport { useMergedState, useMemo } from 'vooks';\nimport { createId } from 'seemly';\nimport { on } from 'evtd';\nimport { useConfig, useFormItem, useTheme, useThemeClass } from '../../_mixins';\nimport { NIconSwitchTransition } from '../../_internal';\nimport { call, createKey, warnOnce } from '../../_utils';\nimport { checkboxLight } from '../styles';\nimport CheckMark from './CheckMark';\nimport LineMark from './LineMark';\nimport { checkboxGroupInjectionKey } from './CheckboxGroup';\nimport style from './styles/index.cssr';\nimport { useRtl } from '../../_mixins/use-rtl';\nexport const checkboxProps = Object.assign(Object.assign({}, useTheme.props), { size: String, checked: {\n        type: [Boolean, String, Number],\n        default: undefined\n    }, defaultChecked: {\n        type: [Boolean, String, Number],\n        default: false\n    }, value: [String, Number], disabled: {\n        type: Boolean,\n        default: undefined\n    }, indeterminate: Boolean, label: String, focusable: {\n        type: Boolean,\n        default: true\n    }, checkedValue: {\n        type: [Boolean, String, Number],\n        default: true\n    }, uncheckedValue: {\n        type: [Boolean, String, Number],\n        default: false\n    }, 'onUpdate:checked': [Function, Array], onUpdateChecked: [Function, Array], \n    // private\n    privateInsideTable: Boolean, \n    // deprecated\n    onChange: [Function, Array] });\nexport default defineComponent({\n    name: 'Checkbox',\n    props: checkboxProps,\n    setup(props) {\n        if (process.env.NODE_ENV !== 'production') {\n            watchEffect(() => {\n                if (props.onChange) {\n                    warnOnce('checkbox', '`on-change` is deprecated, please use `on-update:checked` instead.');\n                }\n            });\n        }\n        const selfRef = ref(null);\n        const { mergedClsPrefixRef, inlineThemeDisabled, mergedRtlRef } = useConfig(props);\n        const formItem = useFormItem(props, {\n            mergedSize(NFormItem) {\n                const { size } = props;\n                if (size !== undefined)\n                    return size;\n                if (NCheckboxGroup) {\n                    const { value: mergedSize } = NCheckboxGroup.mergedSizeRef;\n                    if (mergedSize !== undefined) {\n                        return mergedSize;\n                    }\n                }\n                if (NFormItem) {\n                    const { mergedSize } = NFormItem;\n                    if (mergedSize !== undefined)\n                        return mergedSize.value;\n                }\n                return 'medium';\n            },\n            mergedDisabled(NFormItem) {\n                const { disabled } = props;\n                if (disabled !== undefined)\n                    return disabled;\n                if (NCheckboxGroup) {\n                    if (NCheckboxGroup.disabledRef.value)\n                        return true;\n                    const { maxRef: { value: max }, checkedCountRef } = NCheckboxGroup;\n                    if (max !== undefined &&\n                        checkedCountRef.value >= max &&\n                        !renderedCheckedRef.value) {\n                        return true;\n                    }\n                    const { minRef: { value: min } } = NCheckboxGroup;\n                    if (min !== undefined &&\n                        checkedCountRef.value <= min &&\n                        renderedCheckedRef.value) {\n                        return true;\n                    }\n                }\n                if (NFormItem) {\n                    return NFormItem.disabled.value;\n                }\n                return false;\n            }\n        });\n        const { mergedDisabledRef, mergedSizeRef } = formItem;\n        const NCheckboxGroup = inject(checkboxGroupInjectionKey, null);\n        const uncontrolledCheckedRef = ref(props.defaultChecked);\n        const controlledCheckedRef = toRef(props, 'checked');\n        const mergedCheckedRef = useMergedState(controlledCheckedRef, uncontrolledCheckedRef);\n        const renderedCheckedRef = useMemo(() => {\n            if (NCheckboxGroup) {\n                const groupValueSet = NCheckboxGroup.valueSetRef.value;\n                if (groupValueSet && props.value !== undefined) {\n                    return groupValueSet.has(props.value);\n                }\n                return false;\n            }\n            else {\n                return mergedCheckedRef.value === props.checkedValue;\n            }\n        });\n        const themeRef = useTheme('Checkbox', '-checkbox', style, checkboxLight, props, mergedClsPrefixRef);\n        function toggle(e) {\n            if (NCheckboxGroup && props.value !== undefined) {\n                NCheckboxGroup.toggleCheckbox(!renderedCheckedRef.value, props.value);\n            }\n            else {\n                const { onChange, 'onUpdate:checked': _onUpdateCheck, onUpdateChecked } = props;\n                const { nTriggerFormInput, nTriggerFormChange } = formItem;\n                const nextChecked = renderedCheckedRef.value\n                    ? props.uncheckedValue\n                    : props.checkedValue;\n                if (_onUpdateCheck) {\n                    call(_onUpdateCheck, nextChecked, e);\n                }\n                if (onUpdateChecked) {\n                    call(onUpdateChecked, nextChecked, e);\n                }\n                if (onChange)\n                    call(onChange, nextChecked, e); // deprecated\n                nTriggerFormInput();\n                nTriggerFormChange();\n                uncontrolledCheckedRef.value = nextChecked;\n            }\n        }\n        function handleClick(e) {\n            if (!mergedDisabledRef.value) {\n                toggle(e);\n            }\n        }\n        function handleKeyUp(e) {\n            if (mergedDisabledRef.value)\n                return;\n            switch (e.key) {\n                case ' ':\n                case 'Enter':\n                    toggle(e);\n            }\n        }\n        function handleKeyDown(e) {\n            switch (e.key) {\n                case ' ':\n                    e.preventDefault();\n            }\n        }\n        const exposedMethods = {\n            focus: () => {\n                var _a;\n                (_a = selfRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n            },\n            blur: () => {\n                var _a;\n                (_a = selfRef.value) === null || _a === void 0 ? void 0 : _a.blur();\n            }\n        };\n        const rtlEnabledRef = useRtl('Checkbox', mergedRtlRef, mergedClsPrefixRef);\n        const cssVarsRef = computed(() => {\n            const { value: mergedSize } = mergedSizeRef;\n            const { common: { cubicBezierEaseInOut }, self: { borderRadius, color, colorChecked, colorDisabled, colorTableHeader, colorTableHeaderModal, colorTableHeaderPopover, checkMarkColor, checkMarkColorDisabled, border, borderFocus, borderDisabled, borderChecked, boxShadowFocus, textColor, textColorDisabled, checkMarkColorDisabledChecked, colorDisabledChecked, borderDisabledChecked, labelPadding, labelLineHeight, labelFontWeight, [createKey('fontSize', mergedSize)]: fontSize, [createKey('size', mergedSize)]: size } } = themeRef.value;\n            return {\n                '--n-label-line-height': labelLineHeight,\n                '--n-label-font-weight': labelFontWeight,\n                '--n-size': size,\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-border-radius': borderRadius,\n                '--n-border': border,\n                '--n-border-checked': borderChecked,\n                '--n-border-focus': borderFocus,\n                '--n-border-disabled': borderDisabled,\n                '--n-border-disabled-checked': borderDisabledChecked,\n                '--n-box-shadow-focus': boxShadowFocus,\n                '--n-color': color,\n                '--n-color-checked': colorChecked,\n                '--n-color-table': colorTableHeader,\n                '--n-color-table-modal': colorTableHeaderModal,\n                '--n-color-table-popover': colorTableHeaderPopover,\n                '--n-color-disabled': colorDisabled,\n                '--n-color-disabled-checked': colorDisabledChecked,\n                '--n-text-color': textColor,\n                '--n-text-color-disabled': textColorDisabled,\n                '--n-check-mark-color': checkMarkColor,\n                '--n-check-mark-color-disabled': checkMarkColorDisabled,\n                '--n-check-mark-color-disabled-checked': checkMarkColorDisabledChecked,\n                '--n-font-size': fontSize,\n                '--n-label-padding': labelPadding\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('checkbox', computed(() => mergedSizeRef.value[0]), cssVarsRef, props)\n            : undefined;\n        return Object.assign(formItem, exposedMethods, {\n            rtlEnabled: rtlEnabledRef,\n            selfRef,\n            mergedClsPrefix: mergedClsPrefixRef,\n            mergedDisabled: mergedDisabledRef,\n            renderedChecked: renderedCheckedRef,\n            mergedTheme: themeRef,\n            labelId: createId(),\n            handleClick,\n            handleKeyUp,\n            handleKeyDown,\n            cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n            themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n            onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n        });\n    },\n    render() {\n        var _a;\n        const { $slots, renderedChecked, mergedDisabled, indeterminate, privateInsideTable, cssVars, labelId, label, mergedClsPrefix, focusable, handleKeyUp, handleKeyDown, handleClick } = this;\n        (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n        return (h(\"div\", { ref: \"selfRef\", class: [\n                `${mergedClsPrefix}-checkbox`,\n                this.themeClass,\n                this.rtlEnabled && `${mergedClsPrefix}-checkbox--rtl`,\n                renderedChecked && `${mergedClsPrefix}-checkbox--checked`,\n                mergedDisabled && `${mergedClsPrefix}-checkbox--disabled`,\n                indeterminate && `${mergedClsPrefix}-checkbox--indeterminate`,\n                privateInsideTable && `${mergedClsPrefix}-checkbox--inside-table`\n            ], tabindex: mergedDisabled || !focusable ? undefined : 0, role: \"checkbox\", \"aria-checked\": indeterminate ? 'mixed' : renderedChecked, \"aria-labelledby\": labelId, style: cssVars, onKeyup: handleKeyUp, onKeydown: handleKeyDown, onClick: handleClick, onMousedown: () => {\n                on('selectstart', window, (e) => {\n                    e.preventDefault();\n                }, {\n                    once: true\n                });\n            } },\n            h(\"div\", { class: `${mergedClsPrefix}-checkbox-box-wrapper` },\n                \"\\u00A0\",\n                h(\"div\", { class: `${mergedClsPrefix}-checkbox-box` },\n                    h(NIconSwitchTransition, null, {\n                        default: () => this.indeterminate ? (h(\"div\", { key: \"indeterminate\", class: `${mergedClsPrefix}-checkbox-icon` }, LineMark)) : (h(\"div\", { key: \"check\", class: `${mergedClsPrefix}-checkbox-icon` }, CheckMark))\n                    }),\n                    h(\"div\", { class: `${mergedClsPrefix}-checkbox-box__border` }))),\n            label !== null || $slots.default ? (h(\"span\", { class: `${mergedClsPrefix}-checkbox__label`, id: labelId }, $slots.default ? $slots.default() : label)) : null));\n    }\n});\n"],"names":["commonVariables","self","vars","baseColor","inputColorDisabled","cardColor","modalColor","popoverColor","textColorDisabled","borderColor","primaryColor","textColor2","fontSizeSmall","fontSizeMedium","fontSizeLarge","borderRadiusSmall","lineHeight","changeColor","checkboxLight","commonLight","checkboxLight$1","CheckMark","h","LineMark","checkboxGroupInjectionKey","createInjectionKey","checkboxGroupProps","NCheckboxGroup","defineComponent","props","mergedClsPrefixRef","useConfig","formItem","useFormItem","mergedSizeRef","mergedDisabledRef","uncontrolledValueRef","ref","controlledValueRef","computed","mergedValueRef","useMergedState","checkedCount","_a","valueSetRef","toggleCheckbox","checked","checkboxValue","nTriggerFormInput","nTriggerFormChange","onChange","_onUpdateValue","onUpdateValue","groupValue","index","value","call","provide","toRef","style","c","cB","cE","cM","iconSwitchTransition","insideModal","insidePopover","checkboxProps","useTheme","NCheckbox","selfRef","inlineThemeDisabled","mergedRtlRef","NFormItem","size","mergedSize","disabled","max","checkedCountRef","renderedCheckedRef","min","inject","uncontrolledCheckedRef","controlledCheckedRef","mergedCheckedRef","useMemo","groupValueSet","themeRef","toggle","_onUpdateCheck","onUpdateChecked","nextChecked","handleClick","handleKeyUp","handleKeyDown","exposedMethods","rtlEnabledRef","useRtl","cssVarsRef","cubicBezierEaseInOut","borderRadius","color","colorChecked","colorDisabled","colorTableHeader","colorTableHeaderModal","colorTableHeaderPopover","checkMarkColor","checkMarkColorDisabled","border","borderFocus","borderDisabled","borderChecked","boxShadowFocus","textColor","checkMarkColorDisabledChecked","colorDisabledChecked","borderDisabledChecked","labelPadding","labelLineHeight","labelFontWeight","createKey","fontSize","themeClassHandle","useThemeClass","createId","$slots","renderedChecked","mergedDisabled","indeterminate","privateInsideTable","cssVars","labelId","label","mergedClsPrefix","focusable","on","e","NIconSwitchTransition"],"mappings":"weAAA,MAAeA,GAAA,CACX,UAAW,OACX,WAAY,OACZ,UAAW,OACX,aAAc,QACd,gBAAiB,KACrB,ECHaC,GAAQC,GAAS,CAC1B,KAAM,CAAE,UAAAC,EAAW,mBAAAC,EAAoB,UAAAC,EAAW,WAAAC,EAAY,aAAAC,EAAc,kBAAAC,EAAmB,YAAAC,EAAa,aAAAC,EAAc,WAAAC,EAAY,cAAAC,EAAe,eAAAC,EAAgB,cAAAC,EAAe,kBAAAC,EAAmB,WAAAC,CAAY,EAAGd,EACtN,OAAO,OAAO,OAAO,OAAO,OAAO,GAAIF,EAAe,EAAG,CAAE,gBAAiBgB,EAAY,cAAAJ,EACpF,eAAAC,EACA,cAAAC,EAAe,aAAcC,EAAmB,MAAOZ,EAAW,aAAcO,EAAc,cAAeN,EAAoB,qBAAsBA,EAAoB,iBAAkBC,EAAW,sBAAuBC,EAAY,wBAAyBC,EAAc,eAAgBJ,EAAW,uBAAwBK,EAAmB,8BAA+BA,EAAmB,OAAQ,aAAaC,CAAW,GAAI,eAAgB,aAAaA,CAAW,GAAI,sBAAuB,aAAaA,CAAW,GAAI,cAAe,aAAaC,CAAY,GAAI,YAAa,aAAaA,CAAY,GAAI,eAAgB,aAAaO,GAAYP,EAAc,CAAE,MAAO,EAAK,CAAA,CAAC,GAAI,UAAWC,EAAY,kBAAAH,CAAmB,CAAA,CAC/tB,EACMU,GAAgB,CAClB,KAAM,WACN,OAAQC,GACR,KAAAlB,EACJ,EACAmB,GAAeF,GCbfG,GAAgBC,EAAE,MAAO,CAAE,QAAS,YAAa,MAAO,YAAc,EAClEA,EAAE,OAAQ,CAAE,EAAG,oRAAsR,CAAA,CAAC,ECD1SC,GAAgBD,EAAE,MAAO,CAAE,QAAS,cAAe,MAAO,WAAa,EACnEA,EAAE,OAAQ,CAAE,EAAG,8HAAgI,CAAA,CAAC,ECEvIE,EAA4BC,GAAmB,kBAAkB,EACjEC,GAAqB,CAC9B,IAAK,OACL,IAAK,OACL,KAAM,OACN,MAAO,MACP,aAAc,CACV,KAAM,MACN,QAAS,IACZ,EACD,SAAU,CACN,KAAM,QACN,QAAS,MACZ,EACD,iBAAkB,CAAC,SAAU,KAAK,EAClC,cAAe,CAAC,SAAU,KAAK,EAE/B,SAAU,CAAC,SAAU,KAAK,CAC9B,EACAC,GAAeC,EAAgB,CAC3B,KAAM,gBACN,MAAOF,GACP,MAAMG,EAAO,CAQT,KAAM,CAAE,mBAAAC,CAAkB,EAAKC,EAAUF,CAAK,EACxCG,EAAWC,EAAYJ,CAAK,EAC5B,CAAE,cAAAK,EAAe,kBAAAC,CAAmB,EAAGH,EACvCI,EAAuBC,EAAIR,EAAM,YAAY,EAC7CS,EAAqBC,EAAS,IAAMV,EAAM,KAAK,EAC/CW,EAAiBC,EAAeH,EAAoBF,CAAoB,EACxEM,EAAeH,EAAS,IAAM,CAChC,IAAII,EACJ,QAASA,EAAKH,EAAe,SAAW,MAAQG,IAAO,OAAS,OAASA,EAAG,SAAW,CACnG,CAAS,EACKC,EAAcL,EAAS,IACrB,MAAM,QAAQC,EAAe,KAAK,EAC3B,IAAI,IAAIA,EAAe,KAAK,EAEhC,IAAI,GACd,EACD,SAASK,EAAeC,EAASC,EAAe,CAC5C,KAAM,CAAE,kBAAAC,EAAmB,mBAAAC,CAAoB,EAAGjB,EAC5C,CAAE,SAAAkB,EAAU,iBAAkBC,EAAgB,cAAAC,CAAa,EAAKvB,EACtE,GAAI,MAAM,QAAQW,EAAe,KAAK,EAAG,CACrC,MAAMa,EAAa,MAAM,KAAKb,EAAe,KAAK,EAC5Cc,EAAQD,EAAW,UAAWE,GAAUA,IAAUR,CAAa,EACjED,EACK,CAACQ,IACFD,EAAW,KAAKN,CAAa,EACzBK,GACAI,EAAKJ,EAAeC,EAAY,CAC5B,WAAY,QACZ,MAAON,CACvC,CAA6B,EAEDI,GACAK,EAAKL,EAAgBE,EAAY,CAC7B,WAAY,QACZ,MAAON,CACvC,CAA6B,EAELC,IACAC,IACAb,EAAqB,MAAQiB,EAEzBH,GACAM,EAAKN,EAAUG,CAAU,GAI7B,CAACC,IACDD,EAAW,OAAOC,EAAO,CAAC,EACtBF,GACAI,EAAKJ,EAAeC,EAAY,CAC5B,WAAY,UACZ,MAAON,CACvC,CAA6B,EAEDI,GACAK,EAAKL,EAAgBE,EAAY,CAC7B,WAAY,UACZ,MAAON,CACvC,CAA6B,EAEDG,GACAM,EAAKN,EAAUG,CAAU,EAC7BjB,EAAqB,MAAQiB,EAC7BL,IACAC,IAGX,MAEOH,GACIM,GACAI,EAAKJ,EAAe,CAACL,CAAa,EAAG,CACjC,WAAY,QACZ,MAAOA,CACnC,CAAyB,EAEDI,GACAK,EAAKL,EAAgB,CAACJ,CAAa,EAAG,CAClC,WAAY,QACZ,MAAOA,CACnC,CAAyB,EAEDG,GACAM,EAAKN,EAAU,CAACH,CAAa,CAAC,EAClCX,EAAqB,MAAQ,CAACW,CAAa,EAC3CC,IACAC,MAGIG,GACAI,EAAKJ,EAAe,GAAI,CACpB,WAAY,UACZ,MAAOL,CACnC,CAAyB,EAEDI,GACAK,EAAKL,EAAgB,GAAI,CACrB,WAAY,UACZ,MAAOJ,CACnC,CAAyB,EAEDG,GACAM,EAAKN,EAAU,CAAA,CAAE,EACrBd,EAAqB,MAAQ,GAC7BY,IACAC,IAGX,CACD,OAAAQ,GAAQjC,EAA2B,CAC/B,gBAAiBkB,EACjB,OAAQgB,EAAM7B,EAAO,KAAK,EAC1B,OAAQ6B,EAAM7B,EAAO,KAAK,EAC1B,YAAAe,EACA,YAAaT,EACb,cAAAD,EACA,eAAAW,CACZ,CAAS,EACM,CACH,gBAAiBf,CAC7B,CACK,EACD,QAAS,CACL,OAAQR,EAAE,MAAO,CAAE,MAAO,GAAG,KAAK,eAAe,kBAAmB,KAAM,OAAS,EAAE,KAAK,MAAM,CACnG,CACL,CAAC,ECrIDqC,GAAeC,EAAE,CAACC,EAAG,WAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAU7B,CAACD,EAAE,UAAW,CAACC,EAAG,eAAgB,CAACC,EAAG,SAAU,CAClD,OAAQ,yBACV,CAAC,CAAC,CAAC,CAAC,CAAC,EAAGF,EAAE,uBAAwB,CAACC,EAAG,eAAgB,CAACC,EAAG,SAAU;AAAA;AAAA;AAAA,EAGlE,CAAC,CAAC,CAAC,CAAC,EAAGC,EAAG,eAAgB,CAACF,EAAG,eAAgB;AAAA;AAAA,EAE9C,CAAC,CAAC,EAAGE,EAAG,UAAW,CAACF,EAAG,eAAgB;AAAA;AAAA,GAErC,CAACA,EAAG,gBAAiB,CAEzBD,EAAE,cAAe;AAAA;AAAA;AAAA,EAGf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAGG,EAAG,gBAAiB,CAACF,EAAG,eAAgB,CAACA,EAAG,gBAAiB,CAACD,EAAE,cAAe;AAAA;AAAA;AAAA,EAGxF,EAAGA,EAAE,aAAc;AAAA;AAAA;AAAA,EAGnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAGG,EAAG,yBAA0B,CAACH,EAAE,uBAAwB,CAACC,EAAG,eAAgB,CAACC,EAAG,SAAU;AAAA;AAAA;AAAA,EAGnG,CAAC,CAAC,CAAC,CAAC,EAAGD,EAAG,eAAgB;AAAA;AAAA;AAAA;AAAA,GAIxB,CAACC,EAAG,SAAU,CAChB,OAAQ,yBACV,CAAC,CAAC,CAAC,CAAC,CAAC,EAAGC,EAAG,WAAY,CACrB,OAAQ,aACV,EAAG,CAACA,EAAG,UAAW,CAACF,EAAG,eAAgB;AAAA;AAAA,GAElC,CAACC,EAAG,SAAU,CAChB,OAAQ,kCACV,CAAC,EAAGD,EAAG,gBAAiB,CAACD,EAAE,0BAA2B,CACpD,KAAM,4CACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAGC,EAAG,eAAgB;AAAA;AAAA,GAEzB,CAACC,EAAG,SAAU,CAChB,OAAQ,0BACV,CAAC,EAAGD,EAAG,gBAAiB,CAACD,EAAE,0BAA2B,CACpD,KAAM,oCACR,CAAC,CAAC,CAAC,CAAC,CAAC,EAAGE,EAAG,QAAS,CAClB,MAAO,8BACT,CAAC,CAAC,CAAC,EAAGD,EAAG,uBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAO/B,EAAGA,EAAG,eAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAYpB,CAACC,EAAG,SAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWhB,EAAGD,EAAG,gBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GASrB,CAACD,EAAE,0BAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWhC,EAAGI,GAAqB,CACxB,KAAM,MACN,IAAK,KACP,CAAC,CAAC,CAAC,CAAC,CAAC,EAAGF,EAAG,QAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAOhB,CAACF,EAAE,UAAW,CAChB,QAAS,MACX,CAAC,CAAC,CAAC,CAAC,CAAC,EAELK,GAAYJ,EAAG,WAAY;AAAA;AAAA,EAEzB,CAAC,EAEHK,GAAcL,EAAG,WAAY;AAAA;AAAA,EAE3B,CAAC,CAAC,CAAC,EC1IQM,GAAgB,OAAO,OAAO,OAAO,OAAO,CAAA,EAAIC,EAAS,KAAK,EAAG,CAAE,KAAM,OAAQ,QAAS,CAC/F,KAAM,CAAC,QAAS,OAAQ,MAAM,EAC9B,QAAS,MACZ,EAAE,eAAgB,CACf,KAAM,CAAC,QAAS,OAAQ,MAAM,EAC9B,QAAS,EACZ,EAAE,MAAO,CAAC,OAAQ,MAAM,EAAG,SAAU,CAClC,KAAM,QACN,QAAS,MACZ,EAAE,cAAe,QAAS,MAAO,OAAQ,UAAW,CACjD,KAAM,QACN,QAAS,EACZ,EAAE,aAAc,CACb,KAAM,CAAC,QAAS,OAAQ,MAAM,EAC9B,QAAS,EACZ,EAAE,eAAgB,CACf,KAAM,CAAC,QAAS,OAAQ,MAAM,EAC9B,QAAS,EACjB,EAAO,mBAAoB,CAAC,SAAU,KAAK,EAAG,gBAAiB,CAAC,SAAU,KAAK,EAE3E,mBAAoB,QAEpB,SAAU,CAAC,SAAU,KAAK,CAAG,CAAA,EACjCC,GAAezC,EAAgB,CAC3B,KAAM,WACN,MAAOuC,GACP,MAAMtC,EAAO,CAQT,MAAMyC,EAAUjC,EAAI,IAAI,EAClB,CAAE,mBAAAP,EAAoB,oBAAAyC,EAAqB,aAAAC,CAAY,EAAKzC,EAAUF,CAAK,EAC3EG,EAAWC,EAAYJ,EAAO,CAChC,WAAW4C,EAAW,CAClB,KAAM,CAAE,KAAAC,CAAM,EAAG7C,EACjB,GAAI6C,IAAS,OACT,OAAOA,EACX,GAAI/C,EAAgB,CAChB,KAAM,CAAE,MAAOgD,GAAehD,EAAe,cAC7C,GAAIgD,IAAe,OACf,OAAOA,CAEd,CACD,GAAIF,EAAW,CACX,KAAM,CAAE,WAAAE,CAAY,EAAGF,EACvB,GAAIE,IAAe,OACf,OAAOA,EAAW,KACzB,CACD,MAAO,QACV,EACD,eAAeF,EAAW,CACtB,KAAM,CAAE,SAAAG,CAAU,EAAG/C,EACrB,GAAI+C,IAAa,OACb,OAAOA,EACX,GAAIjD,EAAgB,CAChB,GAAIA,EAAe,YAAY,MAC3B,MAAO,GACX,KAAM,CAAE,OAAQ,CAAE,MAAOkD,CAAG,EAAI,gBAAAC,CAAiB,EAAGnD,EACpD,GAAIkD,IAAQ,QACRC,EAAgB,OAASD,GACzB,CAACE,EAAmB,MACpB,MAAO,GAEX,KAAM,CAAE,OAAQ,CAAE,MAAOC,CAAK,CAAA,EAAKrD,EACnC,GAAIqD,IAAQ,QACRF,EAAgB,OAASE,GACzBD,EAAmB,MACnB,MAAO,EAEd,CACD,OAAIN,EACOA,EAAU,SAAS,MAEvB,EACV,CACb,CAAS,EACK,CAAE,kBAAAtC,EAAmB,cAAAD,CAAe,EAAGF,EACvCL,EAAiBsD,GAAOzD,EAA2B,IAAI,EACvD0D,EAAyB7C,EAAIR,EAAM,cAAc,EACjDsD,EAAuBzB,EAAM7B,EAAO,SAAS,EAC7CuD,EAAmB3C,EAAe0C,EAAsBD,CAAsB,EAC9EH,EAAqBM,GAAQ,IAAM,CACrC,GAAI1D,EAAgB,CAChB,MAAM2D,EAAgB3D,EAAe,YAAY,MACjD,OAAI2D,GAAiBzD,EAAM,QAAU,OAC1ByD,EAAc,IAAIzD,EAAM,KAAK,EAEjC,EACV,KAEG,QAAOuD,EAAiB,QAAUvD,EAAM,YAExD,CAAS,EACK0D,EAAWnB,EAAS,WAAY,YAAaT,GAAOzC,GAAeW,EAAOC,CAAkB,EAClG,SAAS0D,EAAO,EAAG,CACf,GAAI7D,GAAkBE,EAAM,QAAU,OAClCF,EAAe,eAAe,CAACoD,EAAmB,MAAOlD,EAAM,KAAK,MAEnE,CACD,KAAM,CAAE,SAAAqB,EAAU,mBAAoBuC,EAAgB,gBAAAC,CAAe,EAAK7D,EACpE,CAAE,kBAAAmB,EAAmB,mBAAAC,CAAoB,EAAGjB,EAC5C2D,EAAcZ,EAAmB,MACjClD,EAAM,eACNA,EAAM,aACR4D,GACAjC,EAAKiC,EAAgBE,EAAa,CAAC,EAEnCD,GACAlC,EAAKkC,EAAiBC,EAAa,CAAC,EAEpCzC,GACAM,EAAKN,EAAUyC,EAAa,CAAC,EACjC3C,IACAC,IACAiC,EAAuB,MAAQS,CAClC,CACJ,CACD,SAASC,EAAY,EAAG,CACfzD,EAAkB,OACnBqD,EAAO,CAAC,CAEf,CACD,SAASK,EAAY,EAAG,CACpB,GAAI,CAAA1D,EAAkB,MAEtB,OAAQ,EAAE,IAAG,CACT,IAAK,IACL,IAAK,QACDqD,EAAO,CAAC,CACf,CACJ,CACD,SAASM,EAAc,EAAG,CACtB,OAAQ,EAAE,IAAG,CACT,IAAK,IACD,EAAE,eAAc,CACvB,CACJ,CACD,MAAMC,EAAiB,CACnB,MAAO,IAAM,CACT,IAAIpD,GACHA,EAAK2B,EAAQ,SAAW,MAAQ3B,IAAO,QAAkBA,EAAG,MAAK,CACrE,EACD,KAAM,IAAM,CACR,IAAIA,GACHA,EAAK2B,EAAQ,SAAW,MAAQ3B,IAAO,QAAkBA,EAAG,KAAI,CACpE,CACb,EACcqD,EAAgBC,GAAO,WAAYzB,EAAc1C,CAAkB,EACnEoE,EAAa3D,EAAS,IAAM,CAC9B,KAAM,CAAE,MAAOoC,CAAY,EAAGzC,EACxB,CAAE,OAAQ,CAAE,qBAAAiE,CAAsB,EAAE,KAAM,CAAE,aAAAC,EAAc,MAAAC,EAAO,aAAAC,EAAc,cAAAC,EAAe,iBAAAC,EAAkB,sBAAAC,EAAuB,wBAAAC,EAAyB,eAAAC,EAAgB,uBAAAC,EAAwB,OAAAC,EAAQ,YAAAC,EAAa,eAAAC,EAAgB,cAAAC,EAAe,eAAAC,EAAgB,UAAAC,GAAW,kBAAA1G,GAAmB,8BAAA2G,GAA+B,qBAAAC,GAAsB,sBAAAC,GAAuB,aAAAC,GAAc,gBAAAC,GAAiB,gBAAAC,GAAiB,CAACC,EAAU,WAAY9C,CAAU,CAAC,EAAG+C,GAAU,CAACD,EAAU,OAAQ9C,CAAU,CAAC,EAAGD,EAAM,CAAA,EAAKa,EAAS,MAChhB,MAAO,CACH,wBAAyBgC,GACzB,wBAAyBC,GACzB,WAAY9C,GACZ,aAAcyB,EACd,oBAAqBC,EACrB,aAAcS,EACd,qBAAsBG,EACtB,mBAAoBF,EACpB,sBAAuBC,EACvB,8BAA+BM,GAC/B,uBAAwBJ,EACxB,YAAaZ,EACb,oBAAqBC,EACrB,kBAAmBE,EACnB,wBAAyBC,EACzB,0BAA2BC,EAC3B,qBAAsBH,EACtB,6BAA8Ba,GAC9B,iBAAkBF,GAClB,0BAA2B1G,GAC3B,uBAAwBmG,EACxB,gCAAiCC,EACjC,wCAAyCO,GACzC,gBAAiBO,GACjB,oBAAqBJ,EACrC,CACA,CAAS,EACKK,EAAmBpD,EACnBqD,GAAc,WAAYrF,EAAS,IAAML,EAAc,MAAM,CAAC,CAAC,EAAGgE,EAAYrE,CAAK,EACnF,OACN,OAAO,OAAO,OAAOG,EAAU+D,EAAgB,CAC3C,WAAYC,EACZ,QAAA1B,EACA,gBAAiBxC,EACjB,eAAgBK,EAChB,gBAAiB4C,EACjB,YAAaQ,EACb,QAASsC,GAAU,EACnB,YAAAjC,EACA,YAAAC,EACA,cAAAC,EACA,QAASvB,EAAsB,OAAY2B,EAC3C,WAAYyB,GAAqB,KAAsC,OAASA,EAAiB,WACjG,SAAUA,GAAqB,KAAsC,OAASA,EAAiB,QAC3G,CAAS,CACJ,EACD,QAAS,CACL,IAAIhF,EACJ,KAAM,CAAE,OAAAmF,EAAQ,gBAAAC,EAAiB,eAAAC,EAAgB,cAAAC,EAAe,mBAAAC,EAAoB,QAAAC,EAAS,QAAAC,EAAS,MAAAC,EAAO,gBAAAC,EAAiB,UAAAC,EAAW,YAAA1C,EAAa,cAAAC,EAAe,YAAAF,CAAa,EAAG,KACrL,OAACjD,EAAK,KAAK,YAAc,MAAQA,IAAO,QAAkBA,EAAG,KAAK,IAAI,EAC9DrB,EAAE,MAAO,CAAE,IAAK,UAAW,MAAO,CAClC,GAAGgH,CAAe,YAClB,KAAK,WACL,KAAK,YAAc,GAAGA,CAAe,iBACrCP,GAAmB,GAAGO,CAAe,qBACrCN,GAAkB,GAAGM,CAAe,sBACpCL,GAAiB,GAAGK,CAAe,2BACnCJ,GAAsB,GAAGI,CAAe,yBAC3C,EAAE,SAAUN,GAAkB,CAACO,EAAY,OAAY,EAAG,KAAM,WAAY,eAAgBN,EAAgB,QAAUF,EAAiB,kBAAmBK,EAAS,MAAOD,EAAS,QAAStC,EAAa,UAAWC,EAAe,QAASF,EAAa,YAAa,IAAM,CACzQ4C,GAAG,cAAe,OAASC,GAAM,CAC7BA,EAAE,eAAc,CACpC,EAAmB,CACC,KAAM,EAC1B,CAAiB,CACjB,CAAe,EACHnH,EAAE,MAAO,CAAE,MAAO,GAAGgH,CAAe,uBAAyB,EACzD,IACAhH,EAAE,MAAO,CAAE,MAAO,GAAGgH,CAAe,eAAiB,EACjDhH,EAAEoH,GAAuB,KAAM,CAC3B,QAAS,IAAM,KAAK,cAAiBpH,EAAE,MAAO,CAAE,IAAK,gBAAiB,MAAO,GAAGgH,CAAe,gBAAgB,EAAI/G,EAAQ,EAAMD,EAAE,MAAO,CAAE,IAAK,QAAS,MAAO,GAAGgH,CAAe,gBAAkB,EAAEjH,EAAS,CACxO,CAAqB,EACDC,EAAE,MAAO,CAAE,MAAO,GAAGgH,CAAe,uBAAyB,CAAA,CAAC,CAAC,EACvED,IAAU,MAAQP,EAAO,QAAWxG,EAAE,OAAQ,CAAE,MAAO,GAAGgH,CAAe,mBAAoB,GAAIF,GAAWN,EAAO,QAAUA,EAAO,UAAYO,CAAK,EAAK,IAAI,CACrK,CACL,CAAC","x_google_ignoreList":[0,1,2,3,4,5,6]}