{"version":3,"file":"Grid-729b6e5c.js","sources":["../../node_modules/seemly/es/css/responsive.js","../../node_modules/naive-ui/es/_utils/vue/is-node-v-show-false.js","../../node_modules/vooks/es/use-breakpoints.js","../../node_modules/naive-ui/es/grid/src/config.js","../../node_modules/naive-ui/es/grid/src/GridItem.js","../../node_modules/naive-ui/es/config-provider/src/config.js","../../node_modules/naive-ui/es/grid/src/Grid.js"],"sourcesContent":["export function parseResponsiveProp(reponsiveProp) {\n    if (typeof reponsiveProp === \"number\") {\n        return {\n            '': reponsiveProp.toString()\n        };\n    }\n    const params = {};\n    reponsiveProp.split(/ +/).forEach((pairLiteral) => {\n        if (pairLiteral === '')\n            return;\n        const [prefix, value] = pairLiteral.split(':');\n        if (value === undefined) {\n            params[''] = prefix;\n        }\n        else {\n            params[prefix] = value;\n        }\n    });\n    return params;\n}\nfunction parseResponsivePropValue(reponsiveProp, activeKeyOrSize) {\n    var _a;\n    if (reponsiveProp === undefined || reponsiveProp === null)\n        return undefined;\n    const classObj = parseResponsiveProp(reponsiveProp);\n    if (activeKeyOrSize === undefined)\n        return classObj[''];\n    if (typeof activeKeyOrSize === 'string') {\n        return (_a = classObj[activeKeyOrSize]) !== null && _a !== void 0 ? _a : classObj[''];\n    }\n    else if (Array.isArray(activeKeyOrSize)) {\n        for (let i = activeKeyOrSize.length - 1; i >= 0; --i) {\n            const key = activeKeyOrSize[i];\n            if (key in classObj)\n                return classObj[key];\n        }\n        return classObj[''];\n    }\n    else {\n        // Here we suppose all the keys are number formatted\n        let activeValue = undefined;\n        let activeKey = -1;\n        Object.keys(classObj).forEach((key) => {\n            const keyAsNum = Number(key);\n            if (!Number.isNaN(keyAsNum) &&\n                activeKeyOrSize >= keyAsNum &&\n                keyAsNum >= activeKey) {\n                activeKey = keyAsNum;\n                activeValue = classObj[key];\n            }\n        });\n        return activeValue;\n    }\n}\nexport { parseResponsivePropValue };\n","import { vShow } from 'vue';\nexport function isNodeVShowFalse(vNode) {\n    var _a;\n    const showDir = (_a = vNode.dirs) === null || _a === void 0 ? void 0 : _a.find(({ dir }) => dir === vShow);\n    return !!(showDir && showDir.value === false);\n}\n","/* eslint-disable @typescript-eslint/consistent-type-assertions */\nimport { ref, computed, onBeforeUnmount } from 'vue';\nimport { isBrowser } from './utils';\nexport const defaultBreakpointOptions = {\n    // mobile\n    // 0 ~ 640 doesn't mean it should display well in all the range,\n    // but means you should treat it like a mobile phone.)\n    xs: 0,\n    s: 640,\n    m: 1024,\n    l: 1280,\n    xl: 1536,\n    '2xl': 1920 // normal desktop display\n};\nfunction createMediaQuery(screenWidth) {\n    return `(min-width: ${screenWidth}px)`;\n}\nconst mqlMap = {};\nfunction useBreakpoints(screens = defaultBreakpointOptions) {\n    if (!isBrowser)\n        return computed(() => []);\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n    if (typeof window.matchMedia !== 'function')\n        return computed(() => []);\n    const breakpointStatusRef = ref({});\n    const breakpoints = Object.keys(screens);\n    const updateBreakpoints = (e, breakpointName) => {\n        if (e.matches)\n            breakpointStatusRef.value[breakpointName] = true;\n        else\n            breakpointStatusRef.value[breakpointName] = false;\n    };\n    breakpoints.forEach((key) => {\n        const breakpointValue = screens[key];\n        let mql;\n        let cbs;\n        if (mqlMap[breakpointValue] === undefined) {\n            mql = window.matchMedia(createMediaQuery(breakpointValue));\n            // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n            if (mql.addEventListener) {\n                mql.addEventListener('change', (e) => {\n                    cbs.forEach((cb) => {\n                        cb(e, key);\n                    });\n                });\n                // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n            }\n            else if (mql.addListener) {\n                mql.addListener((e) => {\n                    cbs.forEach((cb) => {\n                        cb(e, key);\n                    });\n                });\n            }\n            cbs = new Set();\n            mqlMap[breakpointValue] = {\n                mql,\n                cbs\n            };\n        }\n        else {\n            mql = mqlMap[breakpointValue].mql;\n            cbs = mqlMap[breakpointValue].cbs;\n        }\n        cbs.add(updateBreakpoints);\n        if (mql.matches) {\n            cbs.forEach((cb) => {\n                cb(mql, key);\n            });\n        }\n    });\n    onBeforeUnmount(() => {\n        breakpoints.forEach((breakpoint) => {\n            const { cbs } = mqlMap[screens[breakpoint]];\n            if (cbs.has(updateBreakpoints)) {\n                cbs.delete(updateBreakpoints);\n            }\n        });\n    });\n    return computed(() => {\n        const { value } = breakpointStatusRef;\n        return breakpoints.filter((key) => value[key]);\n    });\n}\nexport default useBreakpoints;\n","import { createInjectionKey } from '../../_utils';\nexport const defaultSpan = 1;\nexport const gridInjectionKey = createInjectionKey('n-grid');\n","import { h, defineComponent, inject, getCurrentInstance, computed } from 'vue';\nimport { pxfy } from 'seemly';\nimport { keysOf } from '../../_utils';\nimport { gridInjectionKey } from './config';\nexport const defaultSpan = 1;\nexport const gridItemProps = {\n    span: {\n        type: [Number, String],\n        default: defaultSpan\n    },\n    offset: {\n        type: [Number, String],\n        default: 0\n    },\n    suffix: Boolean,\n    // private props\n    privateOffset: Number,\n    privateSpan: Number,\n    privateColStart: Number,\n    privateShow: {\n        type: Boolean,\n        default: true\n    }\n};\nexport const gridItemPropKeys = keysOf(gridItemProps);\nexport default defineComponent({\n    __GRID_ITEM__: true,\n    name: 'GridItem',\n    alias: ['Gi'],\n    props: gridItemProps,\n    setup() {\n        const { isSsrRef, xGapRef, itemStyleRef, overflowRef, layoutShiftDisabledRef\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n         } = inject(gridInjectionKey);\n        const self = getCurrentInstance();\n        return {\n            overflow: overflowRef,\n            itemStyle: itemStyleRef,\n            layoutShiftDisabled: layoutShiftDisabledRef,\n            mergedXGap: computed(() => {\n                return pxfy(xGapRef.value || 0);\n            }),\n            deriveStyle: () => {\n                void isSsrRef.value;\n                // Here is quite a hack, I hope there is a better way to solve it\n                const { privateSpan = defaultSpan, privateShow = true, privateColStart = undefined, privateOffset = 0\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                 } = self.vnode.props;\n                const { value: xGap } = xGapRef;\n                const mergedXGap = pxfy(xGap || 0);\n                return {\n                    display: !privateShow ? 'none' : '',\n                    gridColumn: `${privateColStart !== null && privateColStart !== void 0 ? privateColStart : `span ${privateSpan}`} / span ${privateSpan}`,\n                    marginLeft: privateOffset\n                        ? `calc((100% - (${privateSpan} - 1) * ${mergedXGap}) / ${privateSpan} * ${privateOffset} + ${mergedXGap} * ${privateOffset})`\n                        : ''\n                };\n            }\n        };\n    },\n    render() {\n        var _a, _b;\n        if (this.layoutShiftDisabled) {\n            const { span, offset, mergedXGap } = this;\n            return (h(\"div\", { style: {\n                    gridColumn: `span ${span} / span ${span}`,\n                    marginLeft: offset\n                        ? `calc((100% - (${span} - 1) * ${mergedXGap}) / ${span} * ${offset} + ${mergedXGap} * ${offset})`\n                        : ''\n                } }, this.$slots));\n        }\n        return (h(\"div\", { style: [this.itemStyle, this.deriveStyle()] }, (_b = (_a = this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a, { overflow: this.overflow })));\n    }\n});\n","export const defaultBreakpoints = {\n    xs: 0,\n    s: 640,\n    m: 1024,\n    l: 1280,\n    xl: 1536,\n    xxl: 1920 // normal desktop display\n};\n","import { h, defineComponent, computed, provide, toRef, mergeProps, ref, cloneVNode, vShow, onMounted } from 'vue';\nimport { useBreakpoints, useMemo } from 'vooks';\nimport { VResizeObserver } from 'vueuc';\nimport { pxfy, parseResponsivePropValue, beforeNextFrameOnce } from 'seemly';\nimport { defaultBreakpoints } from '../../config-provider/src/config';\nimport { useConfig } from '../../_mixins';\nimport { getSlot, flatten, isBrowser, isNodeVShowFalse } from '../../_utils';\nimport { defaultSpan, gridInjectionKey } from './config';\nconst defaultCols = 24;\nconst SSR_ATTR_NAME = '__ssr__';\nexport const gridProps = {\n    layoutShiftDisabled: Boolean,\n    responsive: {\n        type: [String, Boolean],\n        default: 'self'\n    },\n    cols: {\n        type: [Number, String],\n        default: defaultCols\n    },\n    itemResponsive: Boolean,\n    collapsed: Boolean,\n    // may create grid rows < collapsedRows since a item may take all the row\n    collapsedRows: {\n        type: Number,\n        default: 1\n    },\n    itemStyle: [Object, String],\n    xGap: {\n        type: [Number, String],\n        default: 0\n    },\n    yGap: {\n        type: [Number, String],\n        default: 0\n    }\n};\nexport default defineComponent({\n    name: 'Grid',\n    inheritAttrs: false,\n    props: gridProps,\n    setup(props) {\n        const { mergedClsPrefixRef, mergedBreakpointsRef } = useConfig(props);\n        const numRegex = /^\\d+$/;\n        const widthRef = ref(undefined);\n        const breakpointsRef = useBreakpoints((mergedBreakpointsRef === null || mergedBreakpointsRef === void 0 ? void 0 : mergedBreakpointsRef.value) || defaultBreakpoints);\n        const isResponsiveRef = useMemo(() => {\n            if (props.itemResponsive)\n                return true;\n            if (!numRegex.test(props.cols.toString()))\n                return true;\n            if (!numRegex.test(props.xGap.toString()))\n                return true;\n            if (!numRegex.test(props.yGap.toString()))\n                return true;\n            return false;\n        });\n        const responsiveQueryRef = computed(() => {\n            if (!isResponsiveRef.value)\n                return undefined;\n            return props.responsive === 'self' ? widthRef.value : breakpointsRef.value;\n        });\n        const responsiveColsRef = useMemo(() => {\n            var _a;\n            return ((_a = Number(parseResponsivePropValue(props.cols.toString(), responsiveQueryRef.value))) !== null && _a !== void 0 ? _a : defaultCols);\n        });\n        const responsiveXGapRef = useMemo(() => parseResponsivePropValue(props.xGap.toString(), responsiveQueryRef.value));\n        const responsiveYGapRef = useMemo(() => parseResponsivePropValue(props.yGap.toString(), responsiveQueryRef.value));\n        const handleResize = (entry) => {\n            widthRef.value = entry.contentRect.width;\n        };\n        const handleResizeRaf = (entry) => {\n            beforeNextFrameOnce(handleResize, entry);\n        };\n        const overflowRef = ref(false);\n        const handleResizeRef = computed(() => {\n            if (props.responsive === 'self') {\n                return handleResizeRaf;\n            }\n            return undefined;\n        });\n        // for SSR, fix bug https://github.com/tusen-ai/naive-ui/issues/2462\n        const isSsrRef = ref(false);\n        const contentElRef = ref();\n        onMounted(() => {\n            const { value: contentEl } = contentElRef;\n            if (contentEl) {\n                if (contentEl.hasAttribute(SSR_ATTR_NAME)) {\n                    contentEl.removeAttribute(SSR_ATTR_NAME);\n                    isSsrRef.value = true;\n                }\n            }\n        });\n        provide(gridInjectionKey, {\n            layoutShiftDisabledRef: toRef(props, 'layoutShiftDisabled'),\n            isSsrRef,\n            itemStyleRef: toRef(props, 'itemStyle'),\n            xGapRef: responsiveXGapRef,\n            overflowRef\n        });\n        return {\n            isSsr: !isBrowser,\n            contentEl: contentElRef,\n            mergedClsPrefix: mergedClsPrefixRef,\n            style: computed(() => {\n                if (props.layoutShiftDisabled) {\n                    return {\n                        width: '100%',\n                        display: 'grid',\n                        gridTemplateColumns: `repeat(${props.cols}, minmax(0, 1fr))`,\n                        columnGap: pxfy(props.xGap),\n                        rowGap: pxfy(props.yGap)\n                    };\n                }\n                return {\n                    width: '100%',\n                    display: 'grid',\n                    gridTemplateColumns: `repeat(${responsiveColsRef.value}, minmax(0, 1fr))`,\n                    columnGap: pxfy(responsiveXGapRef.value),\n                    rowGap: pxfy(responsiveYGapRef.value)\n                };\n            }),\n            isResponsive: isResponsiveRef,\n            responsiveQuery: responsiveQueryRef,\n            responsiveCols: responsiveColsRef,\n            handleResize: handleResizeRef,\n            overflow: overflowRef\n        };\n    },\n    render() {\n        if (this.layoutShiftDisabled) {\n            return h('div', mergeProps({\n                ref: 'contentEl',\n                class: `${this.mergedClsPrefix}-grid`,\n                style: this.style\n            }, this.$attrs), this.$slots);\n        }\n        const renderContent = () => {\n            var _a, _b, _c, _d, _e, _f, _g;\n            this.overflow = false;\n            // render will be called twice when mounted, I can't figure out why\n            // 2 jobs will be pushed into job queues with same id, and then be flushed\n            const rawChildren = flatten(getSlot(this));\n            const childrenAndRawSpan = [];\n            const { collapsed, collapsedRows, responsiveCols, responsiveQuery } = this;\n            rawChildren.forEach((child) => {\n                var _a, _b, _c, _d;\n                if (((_a = child === null || child === void 0 ? void 0 : child.type) === null || _a === void 0 ? void 0 : _a.__GRID_ITEM__) !== true)\n                    return;\n                if (isNodeVShowFalse(child)) {\n                    const clonedNode = cloneVNode(child);\n                    if (clonedNode.props) {\n                        clonedNode.props.privateShow = false;\n                    }\n                    else {\n                        clonedNode.props = { privateShow: false };\n                    }\n                    childrenAndRawSpan.push({\n                        child: clonedNode,\n                        rawChildSpan: 0\n                    });\n                    return;\n                }\n                // We don't want v-show to control display, so we need to stripe it\n                // here, nor it may mess child's style\n                child.dirs = ((_b = child.dirs) === null || _b === void 0 ? void 0 : _b.filter(({ dir }) => dir !== vShow)) || null;\n                const clonedChild = cloneVNode(child);\n                const rawChildSpan = Number((_d = parseResponsivePropValue((_c = clonedChild.props) === null || _c === void 0 ? void 0 : _c.span, responsiveQuery)) !== null && _d !== void 0 ? _d : defaultSpan);\n                if (rawChildSpan === 0)\n                    return;\n                childrenAndRawSpan.push({\n                    child: clonedChild,\n                    rawChildSpan\n                });\n            });\n            let suffixSpan = 0;\n            const maybeSuffixNode = (_a = childrenAndRawSpan[childrenAndRawSpan.length - 1]) === null || _a === void 0 ? void 0 : _a.child;\n            if (maybeSuffixNode === null || maybeSuffixNode === void 0 ? void 0 : maybeSuffixNode.props) {\n                const suffixPropValue = (_b = maybeSuffixNode.props) === null || _b === void 0 ? void 0 : _b.suffix;\n                if (suffixPropValue !== undefined && suffixPropValue !== false) {\n                    suffixSpan = (_d = (_c = maybeSuffixNode.props) === null || _c === void 0 ? void 0 : _c.span) !== null && _d !== void 0 ? _d : defaultSpan;\n                    maybeSuffixNode.props.privateSpan = suffixSpan;\n                    maybeSuffixNode.props.privateColStart =\n                        responsiveCols + 1 - suffixSpan;\n                    maybeSuffixNode.props.privateShow =\n                        (_e = maybeSuffixNode.props.privateShow) !== null && _e !== void 0 ? _e : true;\n                }\n            }\n            let spanCounter = 0;\n            let done = false;\n            for (const { child, rawChildSpan } of childrenAndRawSpan) {\n                if (done) {\n                    this.overflow = true;\n                }\n                if (!done) {\n                    const childOffset = Number((_g = parseResponsivePropValue((_f = child.props) === null || _f === void 0 ? void 0 : _f.offset, responsiveQuery)) !== null && _g !== void 0 ? _g : 0);\n                    // it could be 0 sometimes (v-show = false)\n                    const childSpan = Math.min(rawChildSpan + childOffset, responsiveCols);\n                    if (!child.props) {\n                        child.props = {\n                            privateSpan: childSpan,\n                            privateOffset: childOffset\n                        };\n                    }\n                    else {\n                        child.props.privateSpan = childSpan;\n                        child.props.privateOffset = childOffset;\n                    }\n                    if (collapsed) {\n                        const remainder = spanCounter % responsiveCols;\n                        if (childSpan + remainder > responsiveCols) {\n                            spanCounter += responsiveCols - remainder;\n                        }\n                        if (childSpan + spanCounter + suffixSpan >\n                            collapsedRows * responsiveCols) {\n                            done = true;\n                        }\n                        else {\n                            spanCounter += childSpan;\n                        }\n                    }\n                }\n                if (done) {\n                    if (child.props) {\n                        // suffix node's privateShow may be true\n                        if (child.props.privateShow !== true) {\n                            child.props.privateShow = false;\n                        }\n                    }\n                    else {\n                        child.props = {\n                            privateShow: false\n                        };\n                    }\n                }\n            }\n            return h('div', mergeProps({\n                ref: 'contentEl',\n                class: `${this.mergedClsPrefix}-grid`,\n                style: this.style,\n                [SSR_ATTR_NAME]: this.isSsr || undefined\n            }, this.$attrs), childrenAndRawSpan.map(({ child }) => child));\n        };\n        return this.isResponsive && this.responsive === 'self' ? (h(VResizeObserver, { onResize: this.handleResize }, {\n            default: renderContent\n        })) : (renderContent());\n    }\n});\n"],"names":["parseResponsiveProp","reponsiveProp","params","pairLiteral","prefix","value","parseResponsivePropValue","activeKeyOrSize","_a","classObj","i","key","activeValue","activeKey","keyAsNum","isNodeVShowFalse","vNode","showDir","dir","vShow","defaultBreakpointOptions","createMediaQuery","screenWidth","mqlMap","useBreakpoints","screens","isBrowser","computed","breakpointStatusRef","ref","breakpoints","updateBreakpoints","e","breakpointName","breakpointValue","mql","cbs","cb","onBeforeUnmount","breakpoint","defaultSpan","gridInjectionKey","createInjectionKey","gridItemProps","NGi","defineComponent","isSsrRef","xGapRef","itemStyleRef","overflowRef","layoutShiftDisabledRef","inject","self","getCurrentInstance","pxfy","privateSpan","privateShow","privateColStart","privateOffset","xGap","mergedXGap","_b","span","offset","h","defaultBreakpoints","defaultCols","SSR_ATTR_NAME","gridProps","NGrid","props","mergedClsPrefixRef","mergedBreakpointsRef","useConfig","numRegex","widthRef","breakpointsRef","isResponsiveRef","useMemo","responsiveQueryRef","responsiveColsRef","responsiveXGapRef","responsiveYGapRef","handleResize","entry","handleResizeRaf","beforeNextFrameOnce","handleResizeRef","contentElRef","onMounted","contentEl","provide","toRef","mergeProps","renderContent","_c","_d","_e","_f","_g","rawChildren","flatten","getSlot","childrenAndRawSpan","collapsed","collapsedRows","responsiveCols","responsiveQuery","child","clonedNode","cloneVNode","clonedChild","rawChildSpan","suffixSpan","maybeSuffixNode","suffixPropValue","spanCounter","done","childOffset","childSpan","remainder","VResizeObserver"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6]}