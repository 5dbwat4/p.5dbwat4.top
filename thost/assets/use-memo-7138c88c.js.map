{"version":3,"file":"use-memo-7138c88c.js","sources":["../../node_modules/.pnpm/naive-ui@2.38.1_vue@3.4.25/node_modules/naive-ui/es/_utils/vue/resolve-slot.mjs","../../node_modules/.pnpm/vooks@0.2.12_vue@3.4.25/node_modules/vooks/es/use-memo.js"],"sourcesContent":["import { Fragment, isVNode, Comment } from 'vue';\nfunction ensureValidVNode(vnodes) {\n  return vnodes.some(child => {\n    if (!isVNode(child)) {\n      return true;\n    }\n    if (child.type === Comment) {\n      return false;\n    }\n    if (child.type === Fragment && !ensureValidVNode(child.children)) {\n      return false;\n    }\n    return true;\n  }) ? vnodes : null;\n}\n/**\n * We shouldn't use the following functions with slot flags `_: 1, 2, 3`\n */\nexport function resolveSlot(slot, fallback) {\n  return slot && ensureValidVNode(slot()) || fallback();\n}\nexport function resolveSlotWithProps(slot, props, fallback) {\n  return slot && ensureValidVNode(slot(props)) || fallback(props);\n}\n/**\n * Resolve slot with wrapper if content exists, no fallback\n */\nexport function resolveWrappedSlot(slot, wrapper) {\n  const children = slot && ensureValidVNode(slot());\n  return wrapper(children || null);\n}\n/*\n * Resolve slot with wrapper if content exists, no fallback\n */\nexport function resolveWrappedSlotWithProps(slot, props, wrapper) {\n  const children = slot && ensureValidVNode(slot(props));\n  return wrapper(children || null);\n}\nexport function isSlotEmpty(slot) {\n  return !(slot && ensureValidVNode(slot()));\n}","import { computed, ref, watch } from 'vue';\nfunction useMemo(getterOrOptions) {\n    const computedValueRef = computed(getterOrOptions);\n    // Maybe it's not possible to lazy evaluate the value, since we can't make\n    // render phase capture the deps behind useMemo\n    const valueRef = ref(computedValueRef.value);\n    watch(computedValueRef, (value) => {\n        valueRef.value = value;\n    });\n    if (typeof getterOrOptions === 'function') {\n        return valueRef;\n    }\n    else {\n        return {\n            __v_isRef: true,\n            get value() {\n                return valueRef.value;\n            },\n            set value(v) {\n                getterOrOptions.set(v);\n            }\n        };\n    }\n}\nexport default useMemo;\n"],"names":["ensureValidVNode","vnodes","child","isVNode","Comment","Fragment","resolveSlot","slot","fallback","resolveSlotWithProps","props","resolveWrappedSlot","wrapper","children","resolveWrappedSlotWithProps","isSlotEmpty","useMemo","getterOrOptions","computedValueRef","computed","valueRef","ref","watch","value","v"],"mappings":"6EACA,SAASA,EAAiBC,EAAQ,CAChC,OAAOA,EAAO,KAAKC,GACZC,EAAQD,CAAK,EAGd,EAAAA,EAAM,OAASE,GAGfF,EAAM,OAASG,GAAY,CAACL,EAAiBE,EAAM,QAAQ,GALtD,EASV,EAAID,EAAS,IAChB,CAIO,SAASK,EAAYC,EAAMC,EAAU,CAC1C,OAAOD,GAAQP,EAAiBO,EAAI,CAAE,GAAKC,EAAQ,CACrD,CACO,SAASC,EAAqBF,EAAMG,EAAOF,EAAU,CAC1D,OAAOD,GAAQP,EAAiBO,EAAKG,CAAK,CAAC,GAAKF,EAASE,CAAK,CAChE,CAIO,SAASC,EAAmBJ,EAAMK,EAAS,CAChD,MAAMC,EAAWN,GAAQP,EAAiBO,EAAM,CAAA,EAChD,OAAOK,EAAQC,GAAY,IAAI,CACjC,CAIO,SAASC,EAA4BP,EAAMG,EAAOE,EAAS,CAChE,MAAMC,EAAWN,GAAQP,EAAiBO,EAAKG,CAAK,CAAC,EACrD,OAAOE,EAAQC,GAAY,IAAI,CACjC,CACO,SAASE,EAAYR,EAAM,CAChC,MAAO,EAAEA,GAAQP,EAAiBO,EAAI,CAAE,EAC1C,CCvCA,SAASS,EAAQC,EAAiB,CAC9B,MAAMC,EAAmBC,EAASF,CAAe,EAG3CG,EAAWC,EAAIH,EAAiB,KAAK,EAI3C,OAHAI,EAAMJ,EAAmBK,GAAU,CAC/BH,EAAS,MAAQG,CACzB,CAAK,EACG,OAAON,GAAoB,WACpBG,EAGA,CACH,UAAW,GACX,IAAI,OAAQ,CACR,OAAOA,EAAS,KACnB,EACD,IAAI,MAAMI,EAAG,CACTP,EAAgB,IAAIO,CAAC,CACxB,CACb,CAEA","x_google_ignoreList":[0,1]}