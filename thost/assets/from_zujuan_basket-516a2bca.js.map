{"version":3,"file":"from_zujuan_basket-516a2bca.js","sources":["../../src/views/batch/from_zujuan_basket.vue"],"sourcesContent":["<template>\r\n    <n-alert type=\"warning\">\r\n        请您知悉，试题篮属于是与个人信息相连的敏感数据，数据取决于您保存于后端的token。请确认您在后端提供了正确的token信息。\r\n    </n-alert>\r\n    <n-card hoverable>\r\n        The best practice is:<br/>\r\n        先在组卷网的网页端中找到所有想收录的题目，将它们加入试题篮，然后再回来，选择学科，并单击ENTER.\r\n        <n-cascader\r\n          v-model:value=\"bankid\"\r\n          :options=\"subjectsmap\"\r\n          check-strategy=\"child\"\r\n          :show-path=\"true\"\r\n        />\r\n        <n-input v-model:value=\"iiiiititle\"></n-input>\r\n        <n-button @click=\"enterRoom\">ENTER</n-button>\r\n        <n-button v-if=\"groupsaved\" @click=\"$router.push('/group/'+groupid)\">View</n-button>\r\n\r\n    </n-card>\r\n    </template>\r\n    <script setup>\r\n    import { NAlert,NCard,NInputNumber,NButton,NCascader,NInput } from 'naive-ui';\r\n    import { ZujuanAPI } from '../../shared/zujuan-api';\r\n    import {ref} from \"vue\"\r\n    import subjectsmap from \"../../shared/subjects.json\"\r\n    \r\n    import { useRouter,useRoute } from \"vue-router\";\r\nimport { API } from '../../shared/APIHelper';\r\n    const router=useRouter(),route=useRoute()\r\n    const bankid=ref(15),iiiiititle=ref(\"\")\r\n    const saveGroupLoading=ref(false),groupsaved=ref(false),groupid=ref(\"\")\r\n    const enterRoom=async()=>{\r\n        // ZujuanAPI(\"/app-server/v1/basket/\"+bankid.value).then(async(v)=>{\r\n        // API.get(\"/app-server/v1/basket/\"+bankid.value).then(async(v)=>{\r\n        API.get(\"/api/xkw-helper/relay-proxy/getBasketContent/\"+bankid.value).then(async(v)=>{\r\n            let TL=[]\r\n            v.data.structure.forEach(r=>{\r\n                TL.push(...r.list)\r\n            })\r\n    \r\n            console.log(TL)\r\n\r\n            let grp=[]\r\n\r\n            for (let ii = 0; ii < TL.length; ii++) {\r\n                \r\n           \r\n\r\n        //    const o = TL[ii]\r\n        //     let op = {\r\n        //         qid: o.id,\r\n        //         bankid: bankid.value,\r\n        //         q: o.body,\r\n        //         a: \"<answerparser>unsaved|u</answerparser>\",\r\n        //         extra: JSON.stringify({\r\n        //             from: o.paperSources[0] ? o.paperSources[o.paperSources.length - 1].name : \"\",\r\n        //             knowledgepoint: o.knowledgeInfo.split(\"，\"),\r\n        //             info: [o.type.name, o.diff.name + \"(\" + o.diff.value + \")\"]\r\n\r\n        //         }),\r\n        //         timestamp: (new Date()).getTime()\r\n        //     }\r\n\r\n            await API.get(\"/api/data/add/\"+bankid.value+\"/\"+TL[ii].id).then(v=>{\r\n                grp.push(v.id)\r\n            })\r\n }\r\nawait  API.post(\"/api/group/new\", {\r\n                entry: grp.join(\",\"),\r\n                timestamp: (new Date()).getTime(),\r\n                title:iiiiititle.value,\r\n                desc:\"\"\r\n            }).then(i => {\r\n                groupsaved.value = true\r\n            groupid.value = i.id\r\n        })\r\n        })\r\n    }\r\n    </script>"],"names":["useRouter","useRoute","bankid","ref","iiiiititle","groupsaved","groupid","enterRoom","API","v","TL","r","grp","ii","i"],"mappings":"+0EAoBAA,EAAA,EAAAC,EAAA,EAQA,MAAAC,EAAAC,EAAA,EAAA,EAAAC,EAAAD,EAAA,EAAA,EACAA,EAAA,EAAA,EAAA,MAAAE,EAAAF,EAAA,EAAA,EAAAG,EAAAH,EAAA,EAAA,EACAI,EAAA,SAAA,CAGAC,EAAA,IAAA,gDAAAN,EAAA,KAAA,EAAA,KAAA,MAAAO,GAAA,CACA,IAAAC,EAAA,CAAA,EACAD,EAAA,KAAA,UAAA,QAAAE,GAAA,CACAD,EAAA,KAAA,GAAAC,EAAA,IAAA,CACA,CAAA,EAEA,QAAA,IAAAD,CAAA,EAEA,IAAAE,EAAA,CAAA,EAEA,QAAAC,EAAA,EAAAA,EAAAH,EAAA,OAAAG,IAmBA,MAAAL,EAAA,IAAA,iBAAAN,EAAA,MAAA,IAAAQ,EAAAG,CAAA,EAAA,EAAA,EAAA,KAAAJ,GAAA,CACAG,EAAA,KAAAH,EAAA,EAAA,CACA,CAAA,EAEA,MAAAD,EAAA,KAAA,iBAAA,CACA,MAAAI,EAAA,KAAA,GAAA,EACA,UAAA,IAAA,KAAA,EAAA,QAAA,EACA,MAAAR,EAAA,MACA,KAAA,EACA,CAAA,EAAA,KAAAU,GAAA,CACAT,EAAA,MAAA,GACAC,EAAA,MAAAQ,EAAA,EACA,CAAA,CACA,CAAA,CACA"}