{"version":3,"file":"FadeInExpandTransition-ff940b4d.js","sources":["../../node_modules/naive-ui/es/_utils/vue/call.js","../../node_modules/vooks/es/life-cycle/use-is-mounted.js","../../node_modules/naive-ui/es/_internal/fade-in-expand-transition/src/FadeInExpandTransition.js"],"sourcesContent":["function call(funcs, ...args) {\n    if (Array.isArray(funcs)) {\n        funcs.forEach((func) => call(func, ...args));\n    }\n    else\n        return funcs(...args);\n}\nexport { call };\n","import { ref, onMounted, readonly } from 'vue';\nexport default function isMounted() {\n    const isMounted = ref(false);\n    onMounted(() => { isMounted.value = true; });\n    return readonly(isMounted);\n}\n","import { h, Transition, TransitionGroup, defineComponent } from 'vue';\nexport default defineComponent({\n    name: 'FadeInExpandTransition',\n    props: {\n        appear: Boolean,\n        group: Boolean,\n        mode: String,\n        onLeave: Function,\n        onAfterLeave: Function,\n        onAfterEnter: Function,\n        width: Boolean,\n        // reverse mode is only used in tree\n        // it make it from expanded to collapsed after mounted\n        reverse: Boolean\n    },\n    setup(props, { slots }) {\n        function handleBeforeLeave(el) {\n            if (props.width) {\n                el.style.maxWidth = `${el.offsetWidth}px`;\n            }\n            else {\n                el.style.maxHeight = `${el.offsetHeight}px`;\n            }\n            void el.offsetWidth;\n        }\n        function handleLeave(el) {\n            if (props.width) {\n                el.style.maxWidth = '0';\n            }\n            else {\n                el.style.maxHeight = '0';\n            }\n            void el.offsetWidth;\n            const { onLeave } = props;\n            if (onLeave)\n                onLeave();\n        }\n        function handleAfterLeave(el) {\n            if (props.width) {\n                el.style.maxWidth = '';\n            }\n            else {\n                el.style.maxHeight = '';\n            }\n            const { onAfterLeave } = props;\n            if (onAfterLeave)\n                onAfterLeave();\n        }\n        function handleEnter(el) {\n            el.style.transition = 'none';\n            if (props.width) {\n                const memorizedWidth = el.offsetWidth;\n                el.style.maxWidth = '0';\n                void el.offsetWidth;\n                el.style.transition = '';\n                el.style.maxWidth = `${memorizedWidth}px`;\n            }\n            else {\n                if (props.reverse) {\n                    el.style.maxHeight = `${el.offsetHeight}px`;\n                    void el.offsetHeight;\n                    el.style.transition = '';\n                    el.style.maxHeight = '0';\n                }\n                else {\n                    const memorizedHeight = el.offsetHeight;\n                    el.style.maxHeight = '0';\n                    void el.offsetWidth;\n                    el.style.transition = '';\n                    el.style.maxHeight = `${memorizedHeight}px`;\n                }\n            }\n            void el.offsetWidth;\n        }\n        function handleAfterEnter(el) {\n            var _a;\n            if (props.width) {\n                el.style.maxWidth = '';\n            }\n            else {\n                if (!props.reverse) {\n                    el.style.maxHeight = '';\n                }\n            }\n            (_a = props.onAfterEnter) === null || _a === void 0 ? void 0 : _a.call(props);\n        }\n        return () => {\n            const { group, width, appear, mode } = props;\n            const type = group ? TransitionGroup : Transition;\n            const resolvedProps = {\n                name: width\n                    ? 'fade-in-width-expand-transition'\n                    : 'fade-in-height-expand-transition',\n                appear,\n                onEnter: handleEnter,\n                onAfterEnter: handleAfterEnter,\n                onBeforeLeave: handleBeforeLeave,\n                onLeave: handleLeave,\n                onAfterLeave: handleAfterLeave\n            };\n            if (!group) {\n                ;\n                resolvedProps.mode = mode;\n            }\n            return h(type, resolvedProps, slots);\n        };\n    }\n});\n"],"names":["call","funcs","args","func","isMounted","ref","onMounted","readonly","NFadeInExpandTransition","defineComponent","props","slots","handleBeforeLeave","el","handleLeave","onLeave","handleAfterLeave","onAfterLeave","handleEnter","memorizedWidth","memorizedHeight","handleAfterEnter","_a","group","width","appear","mode","type","TransitionGroup","Transition","resolvedProps","h"],"mappings":"2JAAA,SAASA,EAAKC,KAAUC,EAAM,CAC1B,GAAI,MAAM,QAAQD,CAAK,EACnBA,EAAM,QAASE,GAASH,EAAKG,EAAM,GAAGD,CAAI,CAAC,MAG3C,QAAOD,EAAM,GAAGC,CAAI,CAC5B,CCLe,SAASE,GAAY,CAChC,MAAMA,EAAYC,EAAI,EAAK,EAC3B,OAAAC,EAAU,IAAM,CAAEF,EAAU,MAAQ,EAAO,CAAA,EACpCG,EAASH,CAAS,CAC7B,CCJA,MAAAI,EAAeC,EAAgB,CAC3B,KAAM,yBACN,MAAO,CACH,OAAQ,QACR,MAAO,QACP,KAAM,OACN,QAAS,SACT,aAAc,SACd,aAAc,SACd,MAAO,QAGP,QAAS,OACZ,EACD,MAAMC,EAAO,CAAE,MAAAC,GAAS,CACpB,SAASC,EAAkBC,EAAI,CACvBH,EAAM,MACNG,EAAG,MAAM,SAAW,GAAGA,EAAG,WAAW,KAGrCA,EAAG,MAAM,UAAY,GAAGA,EAAG,YAAY,KAEtCA,EAAG,WACX,CACD,SAASC,EAAYD,EAAI,CACjBH,EAAM,MACNG,EAAG,MAAM,SAAW,IAGpBA,EAAG,MAAM,UAAY,IAEpBA,EAAG,YACR,KAAM,CAAE,QAAAE,CAAS,EAAGL,EAChBK,GACAA,GACP,CACD,SAASC,EAAiBH,EAAI,CACtBH,EAAM,MACNG,EAAG,MAAM,SAAW,GAGpBA,EAAG,MAAM,UAAY,GAEzB,KAAM,CAAE,aAAAI,CAAc,EAAGP,EACrBO,GACAA,GACP,CACD,SAASC,EAAYL,EAAI,CAErB,GADAA,EAAG,MAAM,WAAa,OAClBH,EAAM,MAAO,CACb,MAAMS,EAAiBN,EAAG,YAC1BA,EAAG,MAAM,SAAW,IACfA,EAAG,YACRA,EAAG,MAAM,WAAa,GACtBA,EAAG,MAAM,SAAW,GAAGM,CAAc,IACxC,SAEOT,EAAM,QACNG,EAAG,MAAM,UAAY,GAAGA,EAAG,YAAY,KAClCA,EAAG,aACRA,EAAG,MAAM,WAAa,GACtBA,EAAG,MAAM,UAAY,QAEpB,CACD,MAAMO,EAAkBP,EAAG,aAC3BA,EAAG,MAAM,UAAY,IAChBA,EAAG,YACRA,EAAG,MAAM,WAAa,GACtBA,EAAG,MAAM,UAAY,GAAGO,CAAe,IAC1C,CAEAP,EAAG,WACX,CACD,SAASQ,EAAiBR,EAAI,CAC1B,IAAIS,EACAZ,EAAM,MACNG,EAAG,MAAM,SAAW,GAGfH,EAAM,UACPG,EAAG,MAAM,UAAY,KAG5BS,EAAKZ,EAAM,gBAAkB,MAAQY,IAAO,QAAkBA,EAAG,KAAKZ,CAAK,CAC/E,CACD,MAAO,IAAM,CACT,KAAM,CAAE,MAAAa,EAAO,MAAAC,EAAO,OAAAC,EAAQ,KAAAC,CAAI,EAAKhB,EACjCiB,EAAOJ,EAAQK,EAAkBC,EACjCC,EAAgB,CAClB,KAAMN,EACA,kCACA,mCACN,OAAAC,EACA,QAASP,EACT,aAAcG,EACd,cAAeT,EACf,QAASE,EACT,aAAcE,CAC9B,EACY,OAAKO,IAEDO,EAAc,KAAOJ,GAElBK,EAAEJ,EAAMG,EAAenB,CAAK,CAC/C,CACK,CACL,CAAC","x_google_ignoreList":[0,1,2]}