{"version":3,"mappings":"ipGA4GAA,EAAA,EAAAC,EAAA,EAEA,MAAAC,EAAAC,EAAA,IACAC,EAAAD,GAEA,eACA,cACA,UACA,cACA,eACA,WACA,eACA,UACA,mBACA,QACA,YACA,0BAAAE,EAAA,0EACA,2BAAAA,EAAA,wDACA,0BAAAA,GAAA,uDACA,6BAAAA,CAAA,0DACA,2BAAAA,CAAA,uEACA,yBAAAA,MAAA,sDACA,2BAAAA,CAAA,wDACA,2BAAAA,EAAA,wDACA,mCAAAA,EAAA,+DACA,EAAAC,gBACA,KAAAC,EAAAC,IAAA,CACAJ,EAAA,OAAAE,CAAA,8BAGAG,OACA,MACA,GAKAC,EAAA,EAGAP,GAAA,EAEA,MAAAQ,OACA,MACA,UACA,eACA,SACA,eACA,GACA,UACA,OACA,aACA,OACA,MAQAR,CAAA,IAIAA,MAEA,WACA,WACA,sBACA,iBAEAA,EAAA,MACAA,EAAA,WAGA,CAEAS,EAAA,UAEA,SAAAC,GAAA,CACA,MACA,mCACA,CACA,aACA,MAAAF,EAAA,OACA,IAAAF,KAAA,OAAAA,KAAA,CACA,YAGA,IAAAK,OAAA,KAAAL,OAEA,aAAAA,EAAA,WACA,wBACAM,CAAA,MAEA,EACA,EAGA,SAAAC,EAAAC,EAAA,IACA,CAAAC,EAAA,EAAAC,MACA,EACAF,EAAA,QAAAG,GAAA,CAEAF,GAAAE,KAAA,QACAD,GAAAC,IAAA,OACAC,OAAA,kBACAD,KAAA,aACA,aACAA,EAAA,0BACA,0CAAAA,OAAA,4BACA,+BACA,+BAEA,mBAAAA,QAAA,GAAAA,IAAA,mCACA,iBAAAA,CAAA,gEACAA,CAAA,2FAEA,CACAE,cACA,GAAAJ,UAAA,CACA,YAAAC,EAAAF,SACA,sBAAAA,GAAA,cAKAM,CAAA,cACA,EACAC,EAAA,SACAT,OAAA,CAAAA,EAAA,qEAEA,CACAU,EAAAtB,EAAA,GACAuB,EAAAC,KACA,GAAAC,EAAAb,MAAA,aACA,YAAAa,CAAA,EACAd,EAAA,0BAAAe,CAAA,wBACApB,KAAA,cACA,CACA,EAEAqB,EAAA,WACA,GAAAC,EAAA,QACA,YACAhB,GAAA,UAAAiB,OACA,UAAAxB,MACAyB,EAAA,8BAAAJ,EAAA,UAAAG,EAAA,SAAA1B,GAAA,CACAA,EAAA,OACA4B,IAAA,QAAAF,CAAA,MACAD,IAAA,QACA,KAAAC,EAAA,KAGAzB,GACA,EACA,IAEA,MAAA4B,YACA,IAAAJ,CAAA,KACA,KAAAA,EAAA,QAAAK,MAAA,uBAAAC,EAAA,uBACA,EACA,EAGAC,EAAA,KACAC,EAAA,SACAf,EAAA,QACA","names":["useRouter","useRoute","LoadingBasicInfo","ref","BasicInfo","__vitePreload","ra","res","rej","v","useAttrs","currentArgs","fetchForNewT","generateFetchURL","ZujuanAPI","DATList","updateListInfo","listn","diffall","useCountCount","obitem","paperEddCount","DATListInfo","Analysis0","showAnalysisCard","CollectTsCount","CollectTs","insn","obts","bankid","deleteCollected","optmp","os","API","idslist","sc","b","a","GoOnToAddDATList","showAddToQueuePanel"],"sources":["../../src/views/standalone-functions/danas/entry.vue"],"sourcesContent":["<template>\r\n    <n-card v-if=\"showAddToQueuePanel\">\r\n      <n-form-item label=\"Subject\"> \r\n        <!-- <n-input-number v-model:value=\"options.APIargments.bid\" /> -->\r\n        <n-cascader\r\n      v-model:value=\"bankid\"\r\n      :options=\"BasicInfo.subjectsmap\"\r\n      check-strategy=\"child\"\r\n      :show-path=\"true\"\r\n      :on-update:value=\"(v)=>{currentArgs.knowledges=0,\r\n      currentArgs.types=0,\r\n        bankid=v}\"\r\n    />\r\n    </n-form-item>\r\n        <n-form\r\n    label-placement=\"left\"\r\n    label-width=\"auto\"\r\n    require-mark-placement=\"right-hanging\" v-if=\"LoadingBasicInfo\">\r\n    <n-form-item  label=\"难度(diffs)\"> \r\n      <n-cascader v-model:value=\"currentArgs.diffs\"\r\n      :options=\"BasicInfo.diffsmap\" check-strategy=\"child\" :show-path=\"true\"\r\n    />  </n-form-item>\r\n\r\n\r\n    <n-form-item  label=\"areas\"> \r\n      <n-cascader v-model:value=\"currentArgs.areas\"\r\n      :options=\"BasicInfo.areasmap\" check-strategy=\"child\" :show-path=\"true\"\r\n    />  </n-form-item>\r\n\r\n\r\n    <n-form-item  label=\"sources\"> \r\n      <n-cascader v-model:value=\"currentArgs.sources\"\r\n      :options=\"BasicInfo.sourcesmap\" check-strategy=\"child\" :show-path=\"true\"\r\n    />  </n-form-item>\r\n\r\n\r\n    <n-form-item  label=\"types\"> \r\n      <n-cascader v-model:value=\"currentArgs.types\"\r\n      :options=\"BasicInfo.typesmap[''+bankid]\" check-strategy=\"all\" :show-path=\"true\"\r\n    />  </n-form-item>\r\n\r\n    <n-form-item  label=\"knowledgeInfo\"> \r\n      <n-cascader v-model:value=\"currentArgs.knowledges\"\r\n      :options=\"BasicInfo.knowledgeInfomap[''+bankid]\" check-strategy=\"all\" :show-path=\"true\"\r\n    />  </n-form-item>\r\n\r\n    <n-form-item  label=\"排序(orderBy)\"> \r\n      <n-cascader v-model:value=\"currentArgs.orderBy\"\r\n      :options=\"BasicInfo.orderbymap\" check-strategy=\"all\" :show-path=\"true\"\r\n    />  </n-form-item>\r\n    <n-form-item  label=\"年份(years)\"> \r\n      <n-cascader v-model:value=\"currentArgs.years\"\r\n      :options=\"BasicInfo.yearsmap\" check-strategy=\"all\" :show-path=\"true\"\r\n    />  </n-form-item>\r\n    <n-form-item  label=\"年级(grades)\"> \r\n      <n-cascader v-model:value=\"currentArgs.grades\"\r\n      :options=\"BasicInfo.gradesmap\" check-strategy=\"all\" :show-path=\"true\"\r\n    />  </n-form-item>\r\n    <n-form-item  label=\"pageIndex\"> \r\n      <n-input-number v-model:value=\"currentArgs.pageIndex\" :min=\"0\"\r\n    />  </n-form-item>\r\n    <n-form-item  label=\"pageSize\"> \r\n      <n-input-number v-model:value=\"currentArgs.pageSize\"\r\n    />  </n-form-item>\r\n\r\n   <n-button @click=\"fetchForNewT\">加入至DA List</n-button>\r\n   <n-button @click=\"Analysis0\">分析</n-button>\r\n    </n-form>\r\n\r\n\r\n\r\n</n-card>\r\n\r\n<n-card>\r\n<n-p>Currently On Queue:</n-p>\r\n\r\n<n-p>Count:{{DATList.length}}</n-p>\r\n<n-p>平均难度:{{ DATListInfo.avgdiff}}</n-p>\r\n<n-p>平均组卷次:{{ DATListInfo.avgUseCount}}</n-p>\r\n<n-p>平均用于试卷:{{ DATListInfo.avgPaperSourceCount}}</n-p>\r\n\r\n</n-card>\r\n\r\n<n-card v-if=\"showAnalysisCard\">\r\n  <n-button @click=\"GoOnToAddDATList\">...继续</n-button>\r\n  <n-button @click=\"deleteCollected\">删除已收录</n-button>\r\n  <n-button @click=\"CollectTs(15)\">收录15题</n-button>\r\n  <n-button @click=\"CollectTs(CollectTsCount)\">收录...</n-button>\r\n  <n-input-number v-model:value=\"CollectTsCount\" :width=\"80\"></n-input-number>\r\n  <n-popover trigger=\"hover\"  v-for=\"liv in DATList\">\r\n    <template #trigger>\r\n     <n-space> <n-p>Rate:{{ liv.danas_info.best_t_rate }} | useCount:{{  liv.useCount }} | \r\n    updatedAt:{{ liv.time }} | ID: {{ liv.id }} | {{ liv.diff.name }} | {{ liv.type.name }} | </n-p><n-button text @click=\"RemoveDAChunk(liv)\">Remove</n-button>\r\n    </n-space></template>\r\n    <question-block style=\"width: 700px;height:300px;overflow-y: scroll;\" :qcontent=\"liv\"></question-block>\r\n  </n-popover>\r\n\r\n\r\n  </n-card>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport { ref,useAttrs } from \"vue\";\r\nimport { NForm,NFormItem,NCard,NModal,NButton,NInputNumber,\r\n  NSpace,NPopover,NTabs,NTab,NTabPane,NCascader,NSwitch,NSpin,NP } from \"naive-ui\";\r\nimport { useRouter,useRoute } from \"vue-router\";\r\nimport QuestionBlock from \"@/shared/questionBlock.zjw.a.vue\"\r\nconst router=useRouter(),route=useRoute()\r\nimport { DateTime } from \"luxon\";\r\nconst LoadingBasicInfo=ref(false)\r\nconst BasicInfo=ref({\r\n\r\n\"subjectsmap\":[],          \r\n\"areasmap\":[],             \r\n\"diffsmap\":[],             \r\n\"sourcesmap\":[],           \r\n\"typesmap\":{},             \r\n\"orderbymap\":[],           \r\n\"yearsmap\":[],             \r\n\"gradesmap\":[],            \r\n\"knowledgeInfomap\":{},     \r\n})\r\nPromise.all([\r\n{varname:\"subjectsmap\",co:()=>import(\"@/shared/base-zj-data/subjects.json\")},\r\n{varname:\"areasmap\",co:()=>import(\"@/shared/base-zj-data/areas.json\")},\r\n{varname:\"diffsmap\",co:()=>import(\"@/shared/base-zj-data/diffs.json\")},\r\n{varname:\"sourcesmap\",co:()=>import(\"@/shared/base-zj-data/sources.json\")},\r\n{varname:\"typesmap\",co:()=>import(\"@/shared/base-zj-data/questypeList.tree.json\")},\r\n{varname:\"orderbymap\",co:()=>import(\"@/shared/base-zj-data/orderby.json\")},\r\n{varname:\"yearsmap\",co:()=>import(\"@/shared/base-zj-data/years.json\")},\r\n{varname:\"gradesmap\",co:()=>import(\"@/shared/base-zj-data/grades.json\")},\r\n{varname:\"knowledgeInfomap\",co:()=>import(\"@/shared/base-zj-data/knowl-full.json\")}\r\n].map((ra)=>{\r\n  return new Promise(async(res,rej)=>{\r\n    BasicInfo.value[ra.varname]=(await ra.co()).default\r\n    res()\r\n  })\r\n})).then(v=>{\r\n    LoadingBasicInfo.value=true\r\n})\r\n\r\nimport { ZujuanAPI } from \"@/shared/zujuan-api\";\r\n\r\n// const subjectsmap=import(\"./basicinfo/subjects.json\",import.meta.url)\r\nconst attrs=useAttrs()\r\nconst OBJECT_KEYS = (o) => Object.keys(o);\r\n// const options=ref(getLastAPIOption())\r\nconst view=ref(1)\r\n\r\nconst currentArgs=ref({\r\n    types: 0,\r\n              sources: 0,\r\n              pageIndex: 1,\r\n              pageSize: 10,\r\n              orderBy: 2,\r\n              areas: 0,\r\n              grades: 0,\r\n              diffs: 0,\r\n              knowledges: 0,\r\n              years: 0\r\n})\r\n\r\n// const Preference=ref({\r\n//   showUBlock:false\r\n// })\r\n// import example from \"../../basicinfo/init-blank-q\"\r\nimport { API } from \"@/shared/APIHelper\";\r\n// import { router_push } from \"../../utils/router-goto\";\r\nconst bankid=ref(12)\r\nimport {resolveKData} from \"@/shared/base-zj-data/resolve_k_data\"\r\n\r\n\r\nconst TList=ref([])\r\n\r\nconst DATListInfo=ref({\r\n  avgdiff:0,\r\n  avgPaperSourceCount:0,\r\n  avgUseCount:0\r\n})\r\nconst showAddToQueuePanel=ref(true),\r\nshowAnalysisCard=ref(false)\r\n\r\n\r\nconst DATList=ref([])\r\n\r\nconst fetchForNewT = async () => {\r\n    // Loading.value = true;\r\n    function generateFetchURL() {\r\n      return (\r\n        \"/app-server/v1/ques/list/\" +\r\n        bankid.value +\r\n        \"?\" +\r\n        Object.entries(currentArgs.value)\r\n          .map((v) => v[0] + \"=\" + v[1])\r\n          .join(\"&\")\r\n      );\r\n    }\r\n    await ZujuanAPI(generateFetchURL()).then((v) => {\r\n\r\n    DATList.value.push(...v.data.list)\r\n    console.log(DATList.value);\r\n    updateListInfo(DATList.value)\r\n\r\n    });\r\n  };\r\n\r\n\r\nfunction updateListInfo(listn){\r\n  let diffall=0,useCountCount=0,\r\n  paperEddCount=0\r\n  listn.forEach(obitem => {\r\n    \r\n    diffall+=obitem.diff.value\r\n    useCountCount+=obitem.useCount\r\n    paperEddCount+=obitem.paperSources.length\r\n    if(!obitem.danas_info){\r\n      obitem.danas_info={}\r\n      obitem.danas_info.day_to_now_CTN=\r\n      Math.floor(((new Date()).getTime()-(new Date(obitem.time)).getTime())/1000/60/24)\r\n      if(obitem.danas_info.day_to_now_CTN<7){\r\n        obitem.danas_info.day_to_now_CTN=7\r\n      }\r\n      obitem.danas_info.uc_t_rate=obitem.useCount/obitem.danas_info.day_to_now_CTN\r\n      obitem.danas_info.ucpps_t_rate=(obitem.useCount+obitem.paperSources.length*10)/obitem.danas_info.day_to_now_CTN\r\n      obitem.danas_info.best_t_rate=(obitem.useCount+obitem.paperSources.length*10)/obitem.danas_info.day_to_now_CTN\r\n    }\r\n  });\r\n  DATListInfo.value={\r\n    avgdiff:diffall/listn.length,\r\n    avgUseCount:useCountCount/listn.length,\r\n    avgPaperSourceCount:paperEddCount/listn.length,\r\n  }\r\n}\r\n\r\n\r\nconst Analysis0=()=>{\r\n  showAddToQueuePanel.value=false\r\n  showAnalysisCard.value=true\r\n  DATList.value=DATList.value.sort((a,b)=>b.danas_info.best_t_rate-a.danas_info.best_t_rate)\r\n  // console.log(DATList.value);\r\n}\r\nconst CollectTsCount=ref(5)\r\nconst CollectTs=(insn)=>{\r\n  let obts=DATList.value.slice(0,insn)\r\n  console.log(obts);\r\n ZujuanAPI(\"/app-server/v1/basket/\"+bankid.value,\"POST\",{\r\n  ids:obts.map(v=>v.id).join(\",\")\r\n })\r\n}\r\n\r\nconst deleteCollected=async()=>{\r\nlet optmp=[],idslist=[]\r\nPromise.all(\r\n  DATList.value.map(os=>{\r\n    return new Promise((res,rej)=>{\r\n      API.get(\"/api/qapi/is_collected/\"+bankid.value+\"/\"+os.id).then(ra=>{\r\n        if(!ra.found){\r\n          if(!idslist.includes(os.id)){\r\noptmp.push(os)\r\nidslist.push(os.id)\r\n          }\r\n        }\r\n        res()\r\n      })\r\n    })\r\n  })\r\n).then(sc=>{\r\n  console.log(optmp)\r\n  DATList.value=optmp.sort((a,b)=>b.danas_info.best_t_rate-a.danas_info.best_t_rate)\r\n})\r\n}\r\n\r\n\r\nconst GoOnToAddDATList=()=>{\r\n  showAddToQueuePanel.value=true\r\n  showAnalysisCard.value=false\r\n}\r\n</script>"],"file":"assets/entry-05c03000.js"}