{"version":3,"file":"Image-f47d6a9f.js","sources":["../../node_modules/naive-ui/es/_utils/env/is-native-lazy-load.js","../../node_modules/naive-ui/es/image/src/utils.js","../../node_modules/naive-ui/es/image/src/Image.js"],"sourcesContent":["import { isBrowser } from './is-browser';\nexport const isImageSupportNativeLazy = isBrowser && 'loading' in document.createElement('img');\n","export const resolveOptionsAndHash = (options = {}) => {\n    var _a;\n    const { root = null } = options;\n    return {\n        hash: `${options.rootMargin || '0px 0px 0px 0px'}-${Array.isArray(options.threshold)\n            ? options.threshold.join(',')\n            : (_a = options.threshold) !== null && _a !== void 0 ? _a : '0'}`,\n        options: Object.assign(Object.assign({}, options), { root: (typeof root === 'string' ? document.querySelector(root) : root) ||\n                document.documentElement })\n    };\n};\n// root -> options -> [observer, elements]\nconst observers = new WeakMap();\nconst unobserveHandleMap = new WeakMap();\nconst shouldStartLoadingRefMap = new WeakMap();\nexport const observeIntersection = (el, options, shouldStartLoadingRef) => {\n    if (!el)\n        return () => { };\n    const resolvedOptionsAndHash = resolveOptionsAndHash(options);\n    const { root } = resolvedOptionsAndHash.options;\n    let rootObservers;\n    const _rootObservers = observers.get(root);\n    if (_rootObservers) {\n        rootObservers = _rootObservers;\n    }\n    else {\n        rootObservers = new Map();\n        observers.set(root, rootObservers);\n    }\n    let observer;\n    let observerAndObservedElements;\n    if (rootObservers.has(resolvedOptionsAndHash.hash)) {\n        observerAndObservedElements =\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            rootObservers.get(resolvedOptionsAndHash.hash);\n        if (!observerAndObservedElements[1].has(el)) {\n            observer = observerAndObservedElements[0];\n            observerAndObservedElements[1].add(el);\n            observer.observe(el);\n        }\n    }\n    else {\n        observer = new IntersectionObserver((entries) => {\n            entries.forEach((entry) => {\n                if (entry.isIntersecting) {\n                    const _unobserve = unobserveHandleMap.get(entry.target);\n                    const _shouldStartLoadingRef = shouldStartLoadingRefMap.get(entry.target);\n                    if (_unobserve)\n                        _unobserve();\n                    if (_shouldStartLoadingRef) {\n                        _shouldStartLoadingRef.value = true;\n                    }\n                }\n            });\n        }, resolvedOptionsAndHash.options);\n        observer.observe(el);\n        observerAndObservedElements = [observer, new Set([el])];\n        rootObservers.set(resolvedOptionsAndHash.hash, observerAndObservedElements);\n    }\n    let unobservered = false;\n    const unobserve = () => {\n        if (unobservered)\n            return;\n        unobserveHandleMap.delete(el);\n        shouldStartLoadingRefMap.delete(el);\n        unobservered = true;\n        if (observerAndObservedElements[1].has(el)) {\n            observerAndObservedElements[0].unobserve(el);\n            observerAndObservedElements[1].delete(el);\n        }\n        if (observerAndObservedElements[1].size <= 0) {\n            rootObservers.delete(resolvedOptionsAndHash.hash);\n        }\n        if (!rootObservers.size) {\n            observers.delete(root);\n        }\n    };\n    unobserveHandleMap.set(el, unobserve);\n    shouldStartLoadingRefMap.set(el, shouldStartLoadingRef);\n    return unobserve;\n};\n","import { defineComponent, h, inject, ref, watchEffect, onMounted, onBeforeUnmount, provide, toRef } from 'vue';\nimport { isImageSupportNativeLazy } from '../../_utils/env/is-native-lazy-load';\nimport { useConfig } from '../../_mixins';\nimport { imageContextKey, imagePreviewSharedProps } from './interface';\nimport { observeIntersection } from './utils';\nimport { imageGroupInjectionKey } from './ImageGroup';\nimport NImagePreview from './ImagePreview';\nexport const imageProps = Object.assign({ alt: String, height: [String, Number], imgProps: Object, previewedImgProps: Object, lazy: Boolean, intersectionObserverOptions: Object, objectFit: {\n        type: String,\n        default: 'fill'\n    }, previewSrc: String, fallbackSrc: String, width: [String, Number], src: String, previewDisabled: Boolean, loadDescription: String, onError: Function, onLoad: Function }, imagePreviewSharedProps);\nexport default defineComponent({\n    name: 'Image',\n    props: imageProps,\n    inheritAttrs: false,\n    setup(props) {\n        const imageRef = ref(null);\n        const showErrorRef = ref(false);\n        const previewInstRef = ref(null);\n        const imageGroupHandle = inject(imageGroupInjectionKey, null);\n        const { mergedClsPrefixRef } = imageGroupHandle || useConfig(props);\n        const exposedMethods = {\n            click: () => {\n                if (props.previewDisabled || showErrorRef.value)\n                    return;\n                const mergedPreviewSrc = props.previewSrc || props.src;\n                if (imageGroupHandle) {\n                    imageGroupHandle.setPreviewSrc(mergedPreviewSrc);\n                    imageGroupHandle.setThumbnailEl(imageRef.value);\n                    imageGroupHandle.toggleShow();\n                    return;\n                }\n                const { value: previewInst } = previewInstRef;\n                if (!previewInst)\n                    return;\n                previewInst.setPreviewSrc(mergedPreviewSrc);\n                previewInst.setThumbnailEl(imageRef.value);\n                previewInst.toggleShow();\n            }\n        };\n        const shouldStartLoadingRef = ref(!props.lazy);\n        onMounted(() => {\n            var _a;\n            (_a = imageRef.value) === null || _a === void 0 ? void 0 : _a.setAttribute('data-group-id', (imageGroupHandle === null || imageGroupHandle === void 0 ? void 0 : imageGroupHandle.groupId) || '');\n        });\n        onMounted(() => {\n            // Use IntersectionObserver if lazy and intersectionObserverOptions is set\n            if (props.lazy && props.intersectionObserverOptions) {\n                let unobserve;\n                const stopWatchHandle = watchEffect(() => {\n                    unobserve === null || unobserve === void 0 ? void 0 : unobserve();\n                    unobserve = undefined;\n                    unobserve = observeIntersection(imageRef.value, props.intersectionObserverOptions, shouldStartLoadingRef);\n                });\n                onBeforeUnmount(() => {\n                    stopWatchHandle();\n                    unobserve === null || unobserve === void 0 ? void 0 : unobserve();\n                });\n            }\n        });\n        watchEffect(() => {\n            var _a;\n            void props.src;\n            void ((_a = props.imgProps) === null || _a === void 0 ? void 0 : _a.src);\n            showErrorRef.value = false;\n        });\n        const loadedRef = ref(false);\n        provide(imageContextKey, {\n            previewedImgPropsRef: toRef(props, 'previewedImgProps')\n        });\n        return Object.assign({ mergedClsPrefix: mergedClsPrefixRef, groupId: imageGroupHandle === null || imageGroupHandle === void 0 ? void 0 : imageGroupHandle.groupId, previewInstRef,\n            imageRef, showError: showErrorRef, shouldStartLoading: shouldStartLoadingRef, loaded: loadedRef, mergedOnClick: (e) => {\n                var _a, _b;\n                exposedMethods.click();\n                (_b = (_a = props.imgProps) === null || _a === void 0 ? void 0 : _a.onClick) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n            }, mergedOnError: (e) => {\n                if (!shouldStartLoadingRef.value)\n                    return;\n                showErrorRef.value = true;\n                const { onError, imgProps: { onError: imgPropsOnError } = {} } = props;\n                onError === null || onError === void 0 ? void 0 : onError(e);\n                imgPropsOnError === null || imgPropsOnError === void 0 ? void 0 : imgPropsOnError(e);\n            }, mergedOnLoad: (e) => {\n                const { onLoad, imgProps: { onLoad: imgPropsOnLoad } = {} } = props;\n                onLoad === null || onLoad === void 0 ? void 0 : onLoad(e);\n                imgPropsOnLoad === null || imgPropsOnLoad === void 0 ? void 0 : imgPropsOnLoad(e);\n                loadedRef.value = true;\n            } }, exposedMethods);\n    },\n    render() {\n        var _a, _b;\n        const { mergedClsPrefix, imgProps = {}, loaded, $attrs, lazy } = this;\n        const placeholderNode = (_b = (_a = this.$slots).placeholder) === null || _b === void 0 ? void 0 : _b.call(_a);\n        const loadSrc = this.src || imgProps.src;\n        const imgNode = h('img', Object.assign(Object.assign({}, imgProps), { ref: 'imageRef', width: this.width || imgProps.width, height: this.height || imgProps.height, src: this.showError\n                ? this.fallbackSrc\n                : lazy && this.intersectionObserverOptions\n                    ? this.shouldStartLoading\n                        ? loadSrc\n                        : undefined\n                    : loadSrc, alt: this.alt || imgProps.alt, 'aria-label': this.alt || imgProps.alt, onClick: this.mergedOnClick, onError: this.mergedOnError, onLoad: this.mergedOnLoad, \n            // If interseciton observer options is set, do not use native lazy\n            loading: isImageSupportNativeLazy && lazy && !this.intersectionObserverOptions\n                ? 'lazy'\n                : 'eager', style: [\n                imgProps.style || '',\n                placeholderNode && !loaded\n                    ? { height: '0', width: '0', visibility: 'hidden' }\n                    : '',\n                { objectFit: this.objectFit }\n            ], 'data-error': this.showError, 'data-preview-src': this.previewSrc || this.src }));\n        return (h(\"div\", Object.assign({}, $attrs, { role: \"none\", class: [\n                $attrs.class,\n                `${mergedClsPrefix}-image`,\n                (this.previewDisabled || this.showError) &&\n                    `${mergedClsPrefix}-image--preview-disabled`\n            ] }),\n            this.groupId ? (imgNode) : (h(NImagePreview, { theme: this.theme, themeOverrides: this.themeOverrides, clsPrefix: mergedClsPrefix, ref: \"previewInstRef\", showToolbar: this.showToolbar, showToolbarTooltip: this.showToolbarTooltip }, {\n                default: () => imgNode\n            })),\n            !loaded && placeholderNode));\n    }\n});\n"],"names":["isImageSupportNativeLazy","isBrowser","resolveOptionsAndHash","options","_a","root","observers","unobserveHandleMap","shouldStartLoadingRefMap","observeIntersection","el","shouldStartLoadingRef","resolvedOptionsAndHash","rootObservers","_rootObservers","observer","observerAndObservedElements","entries","entry","_unobserve","_shouldStartLoadingRef","unobservered","unobserve","imageProps","imagePreviewSharedProps","NImage","defineComponent","props","imageRef","ref","showErrorRef","previewInstRef","imageGroupHandle","inject","imageGroupInjectionKey","mergedClsPrefixRef","useConfig","exposedMethods","mergedPreviewSrc","previewInst","onMounted","stopWatchHandle","watchEffect","onBeforeUnmount","loadedRef","provide","imageContextKey","toRef","e","_b","onError","imgPropsOnError","onLoad","imgPropsOnLoad","mergedClsPrefix","imgProps","loaded","$attrs","lazy","placeholderNode","loadSrc","imgNode","h","NImagePreview"],"mappings":"2QACO,MAAMA,EAA2BC,GAAa,YAAa,SAAS,cAAc,KAAK,ECDjFC,EAAwB,CAACC,EAAU,KAAO,CACnD,IAAIC,EACJ,KAAM,CAAE,KAAAC,EAAO,IAAM,EAAGF,EACxB,MAAO,CACH,KAAM,GAAGA,EAAQ,YAAc,iBAAiB,IAAI,MAAM,QAAQA,EAAQ,SAAS,EAC7EA,EAAQ,UAAU,KAAK,GAAG,GACzBC,EAAKD,EAAQ,aAAe,MAAQC,IAAO,OAASA,EAAK,GAAG,GACnE,QAAS,OAAO,OAAO,OAAO,OAAO,CAAE,EAAED,CAAO,EAAG,CAAE,MAAO,OAAOE,GAAS,SAAW,SAAS,cAAcA,CAAI,EAAIA,IAC9G,SAAS,eAAe,CAAE,CAC1C,CACA,EAEMC,EAAY,IAAI,QAChBC,EAAqB,IAAI,QACzBC,EAA2B,IAAI,QACxBC,EAAsB,CAACC,EAAIP,EAASQ,IAA0B,CACvE,GAAI,CAACD,EACD,MAAO,IAAM,CAAA,EACjB,MAAME,EAAyBV,EAAsBC,CAAO,EACtD,CAAE,KAAAE,CAAI,EAAKO,EAAuB,QACxC,IAAIC,EACJ,MAAMC,EAAiBR,EAAU,IAAID,CAAI,EACrCS,EACAD,EAAgBC,GAGhBD,EAAgB,IAAI,IACpBP,EAAU,IAAID,EAAMQ,CAAa,GAErC,IAAIE,EACAC,EACAH,EAAc,IAAID,EAAuB,IAAI,GAC7CI,EAEIH,EAAc,IAAID,EAAuB,IAAI,EAC5CI,EAA4B,CAAC,EAAE,IAAIN,CAAE,IACtCK,EAAWC,EAA4B,CAAC,EACxCA,EAA4B,CAAC,EAAE,IAAIN,CAAE,EACrCK,EAAS,QAAQL,CAAE,KAIvBK,EAAW,IAAI,qBAAsBE,GAAY,CAC7CA,EAAQ,QAASC,GAAU,CACvB,GAAIA,EAAM,eAAgB,CACtB,MAAMC,EAAaZ,EAAmB,IAAIW,EAAM,MAAM,EAChDE,EAAyBZ,EAAyB,IAAIU,EAAM,MAAM,EACpEC,GACAA,IACAC,IACAA,EAAuB,MAAQ,GAEtC,CACjB,CAAa,CACb,EAAWR,EAAuB,OAAO,EACjCG,EAAS,QAAQL,CAAE,EACnBM,EAA8B,CAACD,EAAU,IAAI,IAAI,CAACL,CAAE,CAAC,CAAC,EACtDG,EAAc,IAAID,EAAuB,KAAMI,CAA2B,GAE9E,IAAIK,EAAe,GACnB,MAAMC,EAAY,IAAM,CAChBD,IAEJd,EAAmB,OAAOG,CAAE,EAC5BF,EAAyB,OAAOE,CAAE,EAClCW,EAAe,GACXL,EAA4B,CAAC,EAAE,IAAIN,CAAE,IACrCM,EAA4B,CAAC,EAAE,UAAUN,CAAE,EAC3CM,EAA4B,CAAC,EAAE,OAAON,CAAE,GAExCM,EAA4B,CAAC,EAAE,MAAQ,GACvCH,EAAc,OAAOD,EAAuB,IAAI,EAE/CC,EAAc,MACfP,EAAU,OAAOD,CAAI,EAEjC,EACI,OAAAE,EAAmB,IAAIG,EAAIY,CAAS,EACpCd,EAAyB,IAAIE,EAAIC,CAAqB,EAC/CW,CACX,ECzEaC,EAAa,OAAO,OAAO,CAAE,IAAK,OAAQ,OAAQ,CAAC,OAAQ,MAAM,EAAG,SAAU,OAAQ,kBAAmB,OAAQ,KAAM,QAAS,4BAA6B,OAAQ,UAAW,CACrL,KAAM,OACN,QAAS,MACjB,EAAO,WAAY,OAAQ,YAAa,OAAQ,MAAO,CAAC,OAAQ,MAAM,EAAG,IAAK,OAAQ,gBAAiB,QAAS,gBAAiB,OAAQ,QAAS,SAAU,OAAQ,UAAYC,CAAuB,EACvMC,EAAeC,EAAgB,CAC3B,KAAM,QACN,MAAOH,EACP,aAAc,GACd,MAAMI,EAAO,CACT,MAAMC,EAAWC,EAAI,IAAI,EACnBC,EAAeD,EAAI,EAAK,EACxBE,EAAiBF,EAAI,IAAI,EACzBG,EAAmBC,EAAOC,EAAwB,IAAI,EACtD,CAAE,mBAAAC,CAAoB,EAAGH,GAAoBI,EAAUT,CAAK,EAC5DU,EAAiB,CACnB,MAAO,IAAM,CACT,GAAIV,EAAM,iBAAmBG,EAAa,MACtC,OACJ,MAAMQ,EAAmBX,EAAM,YAAcA,EAAM,IACnD,GAAIK,EAAkB,CAClBA,EAAiB,cAAcM,CAAgB,EAC/CN,EAAiB,eAAeJ,EAAS,KAAK,EAC9CI,EAAiB,WAAU,EAC3B,MACH,CACD,KAAM,CAAE,MAAOO,CAAa,EAAGR,EAC1BQ,IAELA,EAAY,cAAcD,CAAgB,EAC1CC,EAAY,eAAeX,EAAS,KAAK,EACzCW,EAAY,WAAU,EACzB,CACb,EACc5B,EAAwBkB,EAAI,CAACF,EAAM,IAAI,EAC7Ca,EAAU,IAAM,CACZ,IAAIpC,GACHA,EAAKwB,EAAS,SAAW,MAAQxB,IAAO,QAAkBA,EAAG,aAAa,gBAAsF4B,GAAiB,SAAY,EAAE,CAC5M,CAAS,EACDQ,EAAU,IAAM,CAEZ,GAAIb,EAAM,MAAQA,EAAM,4BAA6B,CACjD,IAAIL,EACJ,MAAMmB,EAAkBC,EAAY,IAAM,CACgBpB,MACtDA,EAAY,OACZA,EAAYb,EAAoBmB,EAAS,MAAOD,EAAM,4BAA6BhB,CAAqB,CAC5H,CAAiB,EACDgC,EAAgB,IAAM,CAClBF,IACsDnB,KAC1E,CAAiB,CACJ,CACb,CAAS,EACDoB,EAAY,IAAM,CACd,IAAItC,EACCuB,EAAM,KACJvB,EAAKuB,EAAM,YAAc,MAAQvB,IAAO,QAAkBA,EAAG,IACpE0B,EAAa,MAAQ,EACjC,CAAS,EACD,MAAMc,EAAYf,EAAI,EAAK,EAC3B,OAAAgB,EAAQC,EAAiB,CACrB,qBAAsBC,EAAMpB,EAAO,mBAAmB,CAClE,CAAS,EACM,OAAO,OAAO,CAAE,gBAAiBQ,EAAoB,QAA6EH,GAAiB,QAAS,eAAAD,EAC/J,SAAAH,EAAU,UAAWE,EAAc,mBAAoBnB,EAAuB,OAAQiC,EAAW,cAAgBI,GAAM,CACnH,IAAI5C,EAAI6C,EACRZ,EAAe,MAAK,GACnBY,GAAM7C,EAAKuB,EAAM,YAAc,MAAQvB,IAAO,OAAS,OAASA,EAAG,WAAa,MAAQ6C,IAAO,QAAkBA,EAAG,KAAK7C,EAAI4C,CAAC,CAC/I,EAAe,cAAgBA,GAAM,CACrB,GAAI,CAACrC,EAAsB,MACvB,OACJmB,EAAa,MAAQ,GACrB,KAAM,CAAE,QAAAoB,EAAS,SAAU,CAAE,QAASC,GAAoB,CAAA,CAAI,EAAGxB,EACfuB,IAAQF,CAAC,EACOG,IAAgBH,CAAC,CACnG,EAAe,aAAeA,GAAM,CACpB,KAAM,CAAE,OAAAI,EAAQ,SAAU,CAAE,OAAQC,GAAmB,CAAA,CAAI,EAAG1B,EACdyB,IAAOJ,CAAC,EACQK,IAAeL,CAAC,EAChFJ,EAAU,MAAQ,EAClC,CAAe,EAAEP,CAAc,CAC1B,EACD,QAAS,CACL,IAAIjC,EAAI6C,EACR,KAAM,CAAE,gBAAAK,EAAiB,SAAAC,EAAW,CAAE,EAAE,OAAAC,EAAQ,OAAAC,EAAQ,KAAAC,CAAM,EAAG,KAC3DC,GAAmBV,GAAM7C,EAAK,KAAK,QAAQ,eAAiB,MAAQ6C,IAAO,OAAS,OAASA,EAAG,KAAK7C,CAAE,EACvGwD,EAAU,KAAK,KAAOL,EAAS,IAC/BM,EAAUC,EAAE,MAAO,OAAO,OAAO,OAAO,OAAO,CAAE,EAAEP,CAAQ,EAAG,CAAE,IAAK,WAAY,MAAO,KAAK,OAASA,EAAS,MAAO,OAAQ,KAAK,QAAUA,EAAS,OAAQ,IAAK,KAAK,UACpK,KAAK,YACLG,GAAQ,KAAK,4BACT,KAAK,mBACDE,EACA,OACJA,EAAS,IAAK,KAAK,KAAOL,EAAS,IAAK,aAAc,KAAK,KAAOA,EAAS,IAAK,QAAS,KAAK,cAAe,QAAS,KAAK,cAAe,OAAQ,KAAK,aAEjK,QAASvD,GAA4B0D,GAAQ,CAAC,KAAK,4BAC7C,OACA,QAAS,MAAO,CAClBH,EAAS,OAAS,GAClBI,GAAmB,CAACH,EACd,CAAE,OAAQ,IAAK,MAAO,IAAK,WAAY,QAAU,EACjD,GACN,CAAE,UAAW,KAAK,SAAW,CAC7C,EAAe,aAAc,KAAK,UAAW,mBAAoB,KAAK,YAAc,KAAK,GAAK,CAAA,CAAC,EACvF,OAAQM,EAAE,MAAO,OAAO,OAAO,GAAIL,EAAQ,CAAE,KAAM,OAAQ,MAAO,CAC1DA,EAAO,MACP,GAAGH,CAAe,UACjB,KAAK,iBAAmB,KAAK,YAC1B,GAAGA,CAAe,0BACtC,EAAe,EACH,KAAK,QAAWO,EAAYC,EAAEC,EAAe,CAAE,MAAO,KAAK,MAAO,eAAgB,KAAK,eAAgB,UAAWT,EAAiB,IAAK,iBAAkB,YAAa,KAAK,YAAa,mBAAoB,KAAK,oBAAsB,CACpO,QAAS,IAAMO,CAC/B,CAAa,EACD,CAACL,GAAUG,CAAe,CACjC,CACL,CAAC","x_google_ignoreList":[0,1,2]}