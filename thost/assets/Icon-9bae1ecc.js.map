{"version":3,"file":"Icon-9bae1ecc.js","sources":["../../node_modules/lodash-es/isSymbol.js","../../node_modules/lodash-es/_arrayMap.js","../../node_modules/lodash-es/_baseToString.js","../../node_modules/lodash-es/toString.js","../../node_modules/naive-ui/es/_internal/icon/src/styles/index.cssr.js","../../node_modules/naive-ui/es/_internal/icon/src/Icon.js"],"sourcesContent":["import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nexport default arrayMap;\n","import Symbol from './_Symbol.js';\nimport arrayMap from './_arrayMap.js';\nimport isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default baseToString;\n","import baseToString from './_baseToString.js';\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nexport default toString;\n","import { c, cB } from '../../../../_utils/cssr';\nexport default cB('base-icon', `\n height: 1em;\n width: 1em;\n line-height: 1em;\n text-align: center;\n display: inline-block;\n position: relative;\n fill: currentColor;\n transform: translateZ(0);\n`, [c('svg', `\n height: 1em;\n width: 1em;\n `)]);","import { h, defineComponent, toRef } from 'vue';\nimport { useStyle } from '../../../_mixins';\nimport style from './styles/index.cssr';\nexport default defineComponent({\n    name: 'BaseIcon',\n    props: {\n        role: String,\n        ariaLabel: String,\n        ariaDisabled: {\n            type: Boolean,\n            default: undefined\n        },\n        ariaHidden: {\n            type: Boolean,\n            default: undefined\n        },\n        clsPrefix: {\n            type: String,\n            required: true\n        },\n        onClick: Function,\n        onMousedown: Function,\n        onMouseup: Function\n    },\n    setup(props) {\n        useStyle('-base-icon', style, toRef(props, 'clsPrefix'));\n    },\n    render() {\n        return (h(\"i\", { class: `${this.clsPrefix}-base-icon`, onClick: this.onClick, onMousedown: this.onMousedown, onMouseup: this.onMouseup, role: this.role, \"aria-label\": this.ariaLabel, \"aria-hidden\": this.ariaHidden, \"aria-disabled\": this.ariaDisabled }, this.$slots));\n    }\n});\n"],"names":["symbolTag","isSymbol","value","isObjectLike","baseGetTag","arrayMap","array","iteratee","index","length","result","INFINITY","symbolProto","Symbol","symbolToString","baseToString","isArray","toString","style","cB","c","NBaseIcon","defineComponent","props","useStyle","toRef","h"],"mappings":"4JAIA,IAAIA,EAAY,kBAmBhB,SAASC,EAASC,EAAO,CACvB,OAAO,OAAOA,GAAS,UACpBC,EAAaD,CAAK,GAAKE,EAAWF,CAAK,GAAKF,CACjD,CCjBA,SAASK,EAASC,EAAOC,EAAU,CAKjC,QAJIC,EAAQ,GACRC,EAASH,GAAS,KAAO,EAAIA,EAAM,OACnCI,EAAS,MAAMD,CAAM,EAElB,EAAED,EAAQC,GACfC,EAAOF,CAAK,EAAID,EAASD,EAAME,CAAK,EAAGA,EAAOF,CAAK,EAErD,OAAOI,CACT,CCZA,IAAIC,EAAW,EAAI,EAGfC,EAAcC,EAASA,EAAO,UAAY,OAC1CC,EAAiBF,EAAcA,EAAY,SAAW,OAU1D,SAASG,EAAab,EAAO,CAE3B,GAAI,OAAOA,GAAS,SAClB,OAAOA,EAET,GAAIc,EAAQd,CAAK,EAEf,OAAOG,EAASH,EAAOa,CAAY,EAAI,GAEzC,GAAId,EAASC,CAAK,EAChB,OAAOY,EAAiBA,EAAe,KAAKZ,CAAK,EAAI,GAEvD,IAAIQ,EAAUR,EAAQ,GACtB,OAAQQ,GAAU,KAAQ,EAAIR,GAAU,CAACS,EAAY,KAAOD,CAC9D,CCXA,SAASO,EAASf,EAAO,CACvB,OAAOA,GAAS,KAAO,GAAKa,EAAab,CAAK,CAChD,CCxBA,MAAAgB,EAAeC,EAAG,YAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAS5B,CAACC,EAAE,MAAO;AAAA;AAAA;AAAA,EAGX,CAAC,CAAC,ECVJC,EAAeC,EAAgB,CAC3B,KAAM,WACN,MAAO,CACH,KAAM,OACN,UAAW,OACX,aAAc,CACV,KAAM,QACN,QAAS,MACZ,EACD,WAAY,CACR,KAAM,QACN,QAAS,MACZ,EACD,UAAW,CACP,KAAM,OACN,SAAU,EACb,EACD,QAAS,SACT,YAAa,SACb,UAAW,QACd,EACD,MAAMC,EAAO,CACTC,EAAS,aAAcN,EAAOO,EAAMF,EAAO,WAAW,CAAC,CAC1D,EACD,QAAS,CACL,OAAQG,EAAE,IAAK,CAAE,MAAO,GAAG,KAAK,SAAS,aAAc,QAAS,KAAK,QAAS,YAAa,KAAK,YAAa,UAAW,KAAK,UAAW,KAAM,KAAK,KAAM,aAAc,KAAK,UAAW,cAAe,KAAK,WAAY,gBAAiB,KAAK,YAAY,EAAI,KAAK,MAAM,CAC3Q,CACL,CAAC","x_google_ignoreList":[0,1,2,3,4,5]}