{"version":3,"file":"list-6f855cd5.js","sources":["../../src/views/singleQs/expansion-preview.vue","../../src/views/singleQs/list.vue"],"sourcesContent":["<template>\r\n<div v-html=\"content\"></div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, useAttrs } from \"vue\";\r\nimport { API } from \"../../shared/APIHelper\";\r\n\r\nconst attrs=useAttrs()\r\nconst content=ref(\"\")\r\n\r\nAPI.get(\"/api/data/get/\"+attrs.id).then(o=>{\r\ncontent.value=o.q\r\n})\r\n</script>\r\n\r\n<style>\r\n\r\n</style>","<template>\r\n    <n-input-group>\r\n<n-input name=\"search\" placeholder=\"Search\" v-model:value=\"searchParams\" :loading=\"LoadingSearch\" :on-input=\"SearchUpdate\"/>\r\n<n-button @click=\"handleSearch\">     <template #icon><n-icon :component=\"SearchOutline\"/></template></n-button>\r\n<n-button @click=\"Refresh\">     <template #icon><n-icon :component=\"RefreshOutline\"/></template></n-button>\r\n</n-input-group>\r\n<n-data-table remote :loading=\"loadingData\" :pagination=\"paginationReactive\"\r\n:data=\"data\" :columns=\"columns\"\r\n    @update:checked-row-keys=\"handleCheck\" :row-key=\"(row)=>row.id\" visual-scroll/>\r\n</template>\r\n\r\n<script setup>\r\nimport { NButton, NDataTable,NInputGroup,NInput,NIcon,NTime } from \"naive-ui\";\r\nimport { h, ref } from \"vue\";\r\nimport { API } from \"../../shared/APIHelper\"\r\nimport {useRoute,useRouter} from \"vue-router\"\r\nimport { SearchOutline,RefreshOutline } from \"@vicons/ionicons5\";\r\nimport subjectsmapFlattened from \"../../shared/base-zj-data/subjects-flattened-reversed.json\"\r\nimport expansionPreview  from \"./expansion-preview.vue\"\r\nconst route=useRoute(),router=useRouter()\r\n\r\nconst loadingData=ref(true),LoadingSearch=ref(false),searchParams=ref(\"\")\r\nconst data=ref([])\r\n\r\nconst columns=[{\r\n    type:\"selection\"\r\n},{\r\n    type:\"expand\",\r\n    renderExpand(row){\r\n        return h(expansionPreview,{\r\n            id:row.id\r\n        })\r\n    }\r\n},{\r\n    title:\"uuid\",\r\n    key:\"id\"\r\n},{\r\n    title:\"Subject\",\r\n    render(row){\r\n        return h(\"p\",{},subjectsmapFlattened[\"\"+row.bankid])\r\n    }\r\n},{\r\n    title:\"Origin\",\r\n    key:\"origin\"\r\n},{\r\n    title:\"submit time\",\r\n    render(row){\r\n        return h(NTime,{\r\n            time:row.timestamp,\r\n            to:(new Date()).getTime(),\r\n            type:\"relative\"\r\n        })\r\n    }\r\n},{\r\n    title:\"view\",\r\n    render(row){\r\n        return h(NButton,{\r\n            text:true,\r\n            onClick:()=>{\r\n                router.push(\"/view/\"+row.id)\r\n            }\r\n        },{default:()=>\"View\"})\r\n    }\r\n}]\r\n\r\n\r\n\r\nconst checkedRowKeysRef=ref([])\r\nconst handleCheck=(rowKeys) =>{\r\n        checkedRowKeysRef.value = rowKeys;\r\n        console.log(rowKeys);\r\n      }\r\n\r\n      ,gotobatch=()=>{\r\n        router.push(\"/batch/\"+checkedRowKeysRef.value.join(\",\"))\r\n      }\r\n\r\n\r\n      const  paginationReactive = ref({\r\n      page: 1,\r\n      pageSize: 10,\r\n      showSizePicker: true,\r\n      itemCount:0,\r\n      pageSizes: [5,10,20,50],\r\n      onChange: (page) => {\r\n        paginationReactive.value.page = page\r\n        loadingData.value=true\r\n        Refresh()\r\n      },\r\n      onUpdatePageSize: (pageSize) => {\r\n        paginationReactive.value.pageSize = pageSize\r\n        paginationReactive.value.page = 1\r\n        loadingData.value=true\r\n        Refresh()\r\n      }\r\n    })\r\n\r\nconst Refresh=()=>{\r\n    if(searchParams.value==\"\"){\r\n        API.get(`/api/data/list/v2/directget/${(paginationReactive.value.page-1)*paginationReactive.value.pageSize}/${paginationReactive.value.pageSize}`).then(v=>{\r\n    data.value=v.data\r\n    paginationReactive.value.itemCount=v.count\r\n    loadingData.value=false\r\n    LoadingSearch.value=false\r\n})\r\n    }else{\r\n        API.get(`/api/data/v2/group/list/search/uuid?q=${encodeURIComponent(searchParams.value)}&offset=${(paginationReactive.value.page-1)*paginationReactive.value.pageSize}&pagesize=${paginationReactive.value.pageSize}`).then(v=>{\r\n    data.value=v.data\r\n    loadingData.value=false\r\n    LoadingSearch.value=false\r\n    })\r\n}\r\n}\r\n\r\n,SearchUpdate=(v)=>{\r\n    searchParams.value=v\r\n    LoadingSearch.value=true\r\n    Refresh()\r\n}\r\n\r\n// API.get(\"/api/v2/group/list\").then(v=>{\r\n//     data.value=v\r\n//     loadingData.value=false\r\n// })\r\n\r\nRefresh()\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n\r\n\r\n\r\n<!-- <template>\r\n<n-button @click=\"$router.push('/list/uuids_all')\">ALL UUIDS</n-button>\r\n<n-data-table remote\r\n:data=\"data\" :columns=\"columns\"   :loading=\"loading\"\r\n    @update:checked-row-keys=\"handleCheck\" :row-key=\"(row)=>row.id\" visual-scroll />\r\n\r\n     <n-input-group>\r\n      <n-input-group-label>偏移(offset)</n-input-group-label>\r\n     <n-input-number :min=\"0\" v-model:value=\"offset\"/>\r\n     <n-input-group-label>总数(limit)</n-input-group-label>\r\n     <n-input-number  :min=\"0\" v-model:value=\"limit\"/>\r\n      <n-button @click=\"relist\">前往</n-button>\r\n      <n-button @click=\"relist_nextos\">下一组</n-button>\r\n    </n-input-group>\r\n        <n-button @click=\"gotobatch\">BATCH</n-button>\r\n<p>{{data.map(v=>v.id).join(\",\")}}</p>\r\n</template>\r\n\r\n<script setup>\r\nimport { NButton, NDataTable,NInputNumber,NInputGroup,NInputGroupLabel } from \"naive-ui\";\r\nimport { h, ref } from \"vue\";\r\n\r\nimport {useRoute,useRouter} from \"vue-router\"\r\nimport ExtrntionPreview from \"./extention-preview.vue\"\r\nimport {API} from \"../../shared/APIHelper\"\r\nconst route=useRoute(),router=useRouter()\r\n\r\n\r\n\r\nconst data=ref([])\r\n\r\nconst columns=[{\r\n    type:\"selection\"\r\n},{\r\n    type:\"expand\",\r\n    renderExpand(row){\r\n        return h(ExtrntionPreview,{\r\n            id:row.id\r\n        })\r\n    }\r\n},{\r\n    title:\"uuid\",\r\n    key:\"id\"\r\n},{\r\n    title:\"submit time\",\r\n    render(row){\r\n        return h(\"p\",{},(new Date(row.timestamp)).toISOString())\r\n    }\r\n},{\r\n    title:\"extra\",\r\n    key:\"extra\"\r\n},{\r\n    title:\"view\",\r\n    render(row){\r\n        return h(NButton,{\r\n            text:true,\r\n            onClick:()=>{\r\n                router.push(\"/view/\"+row.id)\r\n            }\r\n        },{default:()=>\"View\"})\r\n    }\r\n}]\r\n\r\nconst checkedRowKeysRef=ref([])\r\nconst handleCheck=(rowKeys) =>{\r\n        checkedRowKeysRef.value = rowKeys;\r\n        console.log(rowKeys);\r\n      }\r\n\r\n      ,gotobatch=()=>{\r\n        router.push(\"/batch/\"+checkedRowKeysRef.value.join(\",\"))\r\n      }\r\n\r\n\r\nconst loading=ref(true),offset=ref(parseInt(route.query.offset||\"0\")),limit=ref(parseInt(route.query.limit||\"50\"))\r\n// if(route.query.subject){\r\n\r\n// }\r\n// fetch(\"/api/list/v2\",{method:\"POST\",\"headers\":{\"Content-Type\":\"application/json\"},body:\r\n// JSON.stringify(route.query||{})}).then(v=>v.json()).then(v=>{data.value=v})\r\n\r\n// switch(route.props.type){\r\n//     case \"pure\":{\r\n//         fetch(\"/api/list/v2\",{method:\"POST\"}).then(v=>v.json()).then(v=>{data.value=v})\r\n//     }\r\n// }\r\n// fetch(\"/api/list/v1\",{method:\"POST\"}).then(v=>v.json()).then(v=>{data.value=v})\r\nconsole.log(route.query);\r\nif(!route.query.filter){\r\n    API.get(\"/api/list/v2/directget/\"+offset.value+\"/\"+limit.value).then(v=>{data.value=v;loading.value=false})\r\n}\r\nif(route.query.filter==\"subject\"){\r\n    // console.log(\"djtfuf\");\r\n    \r\n    API.get(\"/api/list/v2/filter/subject/\"+route.query.subject+\"/\"+offset.value+\"/\"+limit.value).then(v=>{data.value=v;loading.value=false})\r\n}\r\n\r\n// const relist=()=>{\r\n//     let rpa=route.query\r\n//     rpa.offset=offset.value\r\n//     rpa.limit=limit.value\r\n\r\n//     console.log(rpa);\r\n//     router.push({\r\n//         \"path\":\"/list\",\r\n//         \"query\":\r\n//         \"query\":rpa\r\n//     })\r\n//     // route.query.offset=5\r\n// }\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n</style> -->\r\n"],"names":["attrs","useAttrs","content","ref","API","o","useRoute","router","useRouter","loadingData","LoadingSearch","searchParams","data","columns","row","h","expansionPreview","subjectsmapFlattened","NTime","NButton","checkedRowKeysRef","handleCheck","rowKeys","paginationReactive","page","Refresh","pageSize","v","SearchUpdate"],"mappings":"k6DAQA,MAAAA,EAAAC,EAAA,EACAC,EAAAC,EAAA,EAAA,EAEA,OAAAC,EAAA,IAAA,iBAAAJ,EAAA,EAAA,EAAA,KAAAK,GAAA,CACAH,EAAA,MAAAG,EAAA,CACA,CAAA,kFCMAC,EAAA,EAAA,MAAAC,EAAAC,EAAA,EAEAC,EAAAN,EAAA,EAAA,EAAAO,EAAAP,EAAA,EAAA,EAAAQ,EAAAR,EAAA,EAAA,EACAS,EAAAT,EAAA,EAAA,EAEAU,EAAA,CAAA,CACA,KAAA,WACA,EAAA,CACA,KAAA,SACA,aAAAC,EAAA,CACA,OAAAC,EAAAC,EAAA,CACA,GAAAF,EAAA,EACA,CAAA,CACA,CACA,EAAA,CACA,MAAA,OACA,IAAA,IACA,EAAA,CACA,MAAA,UACA,OAAAA,EAAA,CACA,OAAAC,EAAA,IAAA,CAAA,EAAAE,EAAA,GAAAH,EAAA,MAAA,CAAA,CACA,CACA,EAAA,CACA,MAAA,SACA,IAAA,QACA,EAAA,CACA,MAAA,cACA,OAAAA,EAAA,CACA,OAAAC,EAAAG,EAAA,CACA,KAAAJ,EAAA,UACA,GAAA,IAAA,KAAA,EAAA,QAAA,EACA,KAAA,UACA,CAAA,CACA,CACA,EAAA,CACA,MAAA,OACA,OAAAA,EAAA,CACA,OAAAC,EAAAI,EAAA,CACA,KAAA,GACA,QAAA,IAAA,CACAZ,EAAA,KAAA,SAAAO,EAAA,EAAA,CACA,CACA,EAAA,CAAA,QAAA,IAAA,MAAA,CAAA,CACA,CACA,CAAA,EAIAM,EAAAjB,EAAA,EAAA,EACAkB,EAAAC,GAAA,CACAF,EAAA,MAAAE,EACA,QAAA,IAAAA,CAAA,CACA,EAOAC,EAAApB,EAAA,CACA,KAAA,EACA,SAAA,GACA,eAAA,GACA,UAAA,EACA,UAAA,CAAA,EAAA,GAAA,GAAA,EAAA,EACA,SAAAqB,GAAA,CACAD,EAAA,MAAA,KAAAC,EACAf,EAAA,MAAA,GACAgB,EAAA,CACA,EACA,iBAAAC,GAAA,CACAH,EAAA,MAAA,SAAAG,EACAH,EAAA,MAAA,KAAA,EACAd,EAAA,MAAA,GACAgB,EAAA,CACA,CACA,CAAA,EAEAA,EAAA,IAAA,CACAd,EAAA,OAAA,GACAP,EAAA,IAAA,gCAAAmB,EAAA,MAAA,KAAA,GAAAA,EAAA,MAAA,QAAA,IAAAA,EAAA,MAAA,QAAA,EAAA,EAAA,KAAAI,GAAA,CACAf,EAAA,MAAAe,EAAA,KACAJ,EAAA,MAAA,UAAAI,EAAA,MACAlB,EAAA,MAAA,GACAC,EAAA,MAAA,EACA,CAAA,EAEAN,EAAA,IAAA,yCAAA,mBAAAO,EAAA,KAAA,CAAA,YAAAY,EAAA,MAAA,KAAA,GAAAA,EAAA,MAAA,QAAA,aAAAA,EAAA,MAAA,QAAA,EAAA,EAAA,KAAAI,GAAA,CACAf,EAAA,MAAAe,EAAA,KACAlB,EAAA,MAAA,GACAC,EAAA,MAAA,EACA,CAAA,CAEA,EAEAkB,EAAAD,GAAA,CACAhB,EAAA,MAAAgB,EACAjB,EAAA,MAAA,GACAe,EAAA,CACA,EAOA,OAAAA,EAAA"}